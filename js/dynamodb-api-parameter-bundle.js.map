{"version":3,"sources":["../node_modules/uuid/lib/rng-browser.js","../node_modules/uuid/lib/bytesToUuid.js","../node_modules/uuid/v4.js","../node_modules/base64-js/index.js","../node_modules/ieee754/index.js","../node_modules/isarray/index.js","../node_modules/buffer/index.js","../node_modules/clone/clone.js","../lib/dynamodb-data-type.js","../lib/dynamodb-data-models.js","../node_modules/ms/index.js","../node_modules/debug/src/common.js","../node_modules/process/browser.js","../node_modules/debug/src/browser.js","../node_modules/object-keys/isArguments.js","../node_modules/object-keys/implementation.js","../node_modules/object-keys/index.js","../node_modules/is-arguments/index.js","../node_modules/object-is/index.js","../node_modules/function-bind/implementation.js","../node_modules/function-bind/index.js","../node_modules/has/src/index.js","../node_modules/is-regex/index.js","../node_modules/define-properties/index.js","../node_modules/regexp.prototype.flags/implementation.js","../node_modules/regexp.prototype.flags/polyfill.js","../node_modules/regexp.prototype.flags/shim.js","../node_modules/regexp.prototype.flags/index.js","../node_modules/is-date-object/index.js","../node_modules/deep-equal/index.js","../node_modules/lex-bnf/lib/token.js","../node_modules/lex-bnf/lib/lexana.js","../node_modules/lex-bnf/lib/bnf-result.js","../node_modules/lex-bnf/lib/bnf.js","../node_modules/lex-bnf/index.js","../lib/dynamodb-keywords.js","../lib/dynamodb-sqlish-parser.js","../lib/dynamodb-statement.js","../lib/dynamodb-read-item-statement.js","../lib/dynamodb-query-statement.js","jquery-uitext.js","dynamodb-api-parameter.js"],"names":["clone","_instanceof","obj","type","nativeMap","nativeSet","nativePromise","Map","_","Set","Promise","parent","circular","depth","prototype","includeNonEnumerable","allParents","allChildren","useBuffer","Buffer","_clone","Infinity","child","proto","resolve","reject","then","value","err","__isArray","__isRegExp","RegExp","source","__getRegExpFlags","lastIndex","__isDate","Date","getTime","isBuffer","allocUnsafe","length","copy","Error","Object","create","getPrototypeOf","index","indexOf","push","i","forEach","key","keyChild","valueChild","set","entryChild","add","attrs","getOwnPropertyDescriptor","getOwnPropertySymbols","symbols","symbol","descriptor","enumerable","defineProperty","allPropertyNames","getOwnPropertyNames","propertyName","__objToStr","o","toString","call","re","flags","global","ignoreCase","multiline","clonePrototype","c","module","exports","DynamoDbDataType","_is","BufferSet","NumberSet","StringSet","List","primaryTypeOf","Array","isArray","type2id","countPossibleType","count","keys","bind","getPossibleType","getPredictedType","checkElementType","element","detect","detector","arrtype","len","require","DynamoDbDataModels","obj2map","typeid","map","from","map2obj","parseInt","cachedSetTimeout","cachedClearTimeout","process","defaultSetTimout","defaultClearTimeout","runTimeout","fun","setTimeout","e","runClearTimeout","marker","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","concat","drainQueue","timeout","run","Item","array","noop","nextTick","args","arguments","apply","title","env","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","name","binding","cwd","chdir","dir","umask","useColors","window","__nwjs","navigator","userAgent","toLowerCase","match","document","documentElement","style","WebkitAppearance","console","firebug","exception","table","$1","formatArgs","namespace","humanize","diff","color","splice","lastC","replace","log","save","namespaces","storage","setItem","removeItem","error","load","r","getItem","localstorage","localStorage","colors","formatters","j","v","JSON","stringify","message","toStr","str","isArgs","callee","keysShim","has","hasOwnProperty","isEnumerable","propertyIsEnumerable","hasDontEnumBug","hasProtoEnumBug","dontEnums","equalsConstructorPrototype","ctor","constructor","excludedKeys","$applicationCache","$console","$external","$frame","$frameElement","$frames","$innerHeight","$innerWidth","$onmozfullscreenchange","$onmozfullscreenerror","$outerHeight","$outerWidth","$pageXOffset","$pageYOffset","$parent","$scrollLeft","$scrollTop","$scrollX","$scrollY","$self","$webkitIndexedDB","$webkitStorageInfo","$window","hasAutomationEqualityBug","k","equalsConstructorPrototypeIfNotBuggy","object","isObject","isFunction","isArguments","isString","theKeys","TypeError","skipProto","String","skipConstructor","slice","origKeys","originalKeys","shim","hasToStringTag","Symbol","toStringTag","isStandardArguments","isLegacyArguments","supportsStandardArguments","NumberIsNaN","a","b","Function","regexExec","exec","gOPD","tryRegexExecCall","regexClass","hasSymbols","origDefineProperty","fn","arePropertyDescriptorsSupported","x","supportsDescriptors","predicate","configurable","writable","defineProperties","predicates","props","toObject","TypeErr","result","dotAll","unicode","sticky","implementation","get","getPolyfill","getProto","regex","polyfill","define","flagsBound","getDay","tryDateObject","dateClass","keywords","isKeyword","toUpperCase","BNF","DynamoDbSqlishParser","CREATE","literal","DROP","TABLE","ALTER","SELECT","INSERT","UPDATE","DELETE","SET","INTO","VALUES","FROM","WHERE","FILTER","LIMIT","BETWEEN","AND","OR","NOT","IN","comma","numlit","ident","strlitDQ","strlitSQ","Expression","tokenize","expr","bnfWords","lex","literalUntil","bnfTokens","token","term","getTerm","getType","setTerm","unescapeDQ","unescapeSQ","tokens","t","ProjectionExpression","parse","expression","names","split","alt","join","getExpression","getAttributeNames","ConditionExpression","getAttributeValues","values","vidx","setValuePlaceholder","phname","charAt","ItemListExpression","s","ss","strUnescape","cc","charCodeAt","itemList","attributeItems","attributeItem","LTok","RTok","paths","path","M","parseProjectionExpression","projectionExpression","expressionAttributeNames","parser","ph","parseConditionExpression","conditionExpression","expressionAttributeValues","parseItemListToMap","WordBuilder","bnfScan","bnfQuery","bnfPutItem","bnfSetItem","bnfDeleteItem","bnfCreateTable","bnfDeleteTable","bnfUpdateTable","bnf","parseTokens","parseCreateTable","parseDeleteTable","parseUpdateTable","parseScan","parseQuery","parsePutItem","parseSetItem","parseDeleteItem","Statement","_parser","tableName","setTableName","conditionExpr","getParameter","opt","TableName","ExpressionAttributeNames","ExpressionAttributeValues","setParam","param","assertAllParamSpecified","DynamoDbReadItemStatement","setLimit","limit","setExclusiveStartKey","lastEvaluatedKey","exclusiveStartKey","setProjectionExpression","projexpr","DynamoDbQueryStatement","keyConditionExpression","filterExpression","setKeyConditionExpression","KeyConditionExpression","setFilterExpression","FilterExpression","Limit","LastEvaluatedKey","sqlish","st","fromClause","getWordsList","whereClause","selectClause","filterClause","limitClause","ExclusiveStartKey","keyConditionExpr","filterExpr","$","uitext","each","addClass","css","appendTo","insertBefore","uuid","QueryStatement","appId","id","DynamoDbApiParameter","appFrame","txtProjectionExpression","val","txtTableName","txtKeyConditionExpression","txtFilterExpression","txtLimit","preResultParameter","btnCopyParam","button","inputLabel","input","mandatory","caption","remark","container","attr","append","enable","state","prop","focus","applyCheckbox","cb","hasClass","find","convert","getSelection","selectAllChildren","execCommand","spinner","min","spin","event","ui","change","trim","apiParameter","convertQueryParam","empty","html","statement","initialize"],"mappings":"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aA,EACrBhG,QAAQyG,KAAOA,EACfzG,QAAQ+G,KAAOA,EACf/G,QAAQgF,UAAYA,EACpBhF,QAAQ2G,QAAUO,IAMlBlH,QAAQoH,OAAS,CAChB,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WA4JDrH,OAAOC,QAAUuB,QAAQ,WAARA,CAAoBvB,SAErC,MAAM,WAACqH,GAActH,OAAOC,QAM5BqH,EAAWC,EAAI,SAAUC,GACpB,IACIC,OAAAA,KAAKC,UAAUF,GACrB,MAAOT,GACD,MAAA,+BAAiCA,EAAMY;;ACrQhD,aAEA,IAAIC,EAAQhK,OAAO7B,UAAUwD,SAE7BS,OAAOC,QAAU,SAAqBrD,GACjCiL,IAAAA,EAAMD,EAAMpI,KAAK5C,GACjBkL,EAAiB,uBAARD,EASNC,OARFA,IACJA,EAAiB,mBAARD,GACE,OAAVjL,GACiB,iBAAVA,GACiB,iBAAjBA,EAAMa,QACbb,EAAMa,QAAU,GACa,sBAA7BmK,EAAMpI,KAAK5C,EAAMmL,SAEZD;;ACfR,aAEA,IAAIE,EACJ,IAAKpK,OAAOkD,KAAM,CAEbmH,IAAAA,EAAMrK,OAAO7B,UAAUmM,eACvBN,EAAQhK,OAAO7B,UAAUwD,SACzBuI,EAAStG,QAAQ,iBACjB2G,EAAevK,OAAO7B,UAAUqM,qBAChCC,GAAkBF,EAAa3I,KAAK,CAAED,SAAU,MAAQ,YACxD+I,EAAkBH,EAAa3I,KAAK,aAAgB,aACpD+I,EAAY,CACf,WACA,iBACA,UACA,iBACA,gBACA,uBACA,eAEGC,EAA6B,SAAU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","file":"dynamodb-api-parameter-bundle.js","sourceRoot":"..\\web","sourcesContent":["// Unique ID creation requires a high quality random # generator.  In the\n// browser this is a little complicated due to unknown quality of Math.random()\n// and inconsistent support for the `crypto` API.  We do the best we can via\n// feature-detection\n\n// getRandomValues needs to be invoked in a context where \"this\" is a Crypto\n// implementation. Also, find the complete implementation of crypto on IE11.\nvar getRandomValues = (typeof(crypto) != 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto)) ||\n                      (typeof(msCrypto) != 'undefined' && typeof window.msCrypto.getRandomValues == 'function' && msCrypto.getRandomValues.bind(msCrypto));\n\nif (getRandomValues) {\n  // WHATWG crypto RNG - http://wiki.whatwg.org/wiki/Crypto\n  var rnds8 = new Uint8Array(16); // eslint-disable-line no-undef\n\n  module.exports = function whatwgRNG() {\n    getRandomValues(rnds8);\n    return rnds8;\n  };\n} else {\n  // Math.random()-based (RNG)\n  //\n  // If all else fails, use Math.random().  It's fast, but is of unspecified\n  // quality.\n  var rnds = new Array(16);\n\n  module.exports = function mathRNG() {\n    for (var i = 0, r; i < 16; i++) {\n      if ((i & 0x03) === 0) r = Math.random() * 0x100000000;\n      rnds[i] = r >>> ((i & 0x03) << 3) & 0xff;\n    }\n\n    return rnds;\n  };\n}\n","/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nvar byteToHex = [];\nfor (var i = 0; i < 256; ++i) {\n  byteToHex[i] = (i + 0x100).toString(16).substr(1);\n}\n\nfunction bytesToUuid(buf, offset) {\n  var i = offset || 0;\n  var bth = byteToHex;\n  // join used to fix memory issue caused by concatenation: https://bugs.chromium.org/p/v8/issues/detail?id=3175#c4\n  return ([bth[buf[i++]], bth[buf[i++]], \n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]],\n\tbth[buf[i++]], bth[buf[i++]],\n\tbth[buf[i++]], bth[buf[i++]]]).join('');\n}\n\nmodule.exports = bytesToUuid;\n","var rng = require('./lib/rng');\nvar bytesToUuid = require('./lib/bytesToUuid');\n\nfunction v4(options, buf, offset) {\n  var i = buf && offset || 0;\n\n  if (typeof(options) == 'string') {\n    buf = options === 'binary' ? new Array(16) : null;\n    options = null;\n  }\n  options = options || {};\n\n  var rnds = options.random || (options.rng || rng)();\n\n  // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n  rnds[6] = (rnds[6] & 0x0f) | 0x40;\n  rnds[8] = (rnds[8] & 0x3f) | 0x80;\n\n  // Copy bytes to buffer, if provided\n  if (buf) {\n    for (var ii = 0; ii < 16; ++ii) {\n      buf[i + ii] = rnds[ii];\n    }\n  }\n\n  return buf || bytesToUuid(rnds);\n}\n\nmodule.exports = v4;\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(\n      uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)\n    ))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n","var clone = (function() {\n'use strict';\n\nfunction _instanceof(obj, type) {\n  return type != null && obj instanceof type;\n}\n\nvar nativeMap;\ntry {\n  nativeMap = Map;\n} catch(_) {\n  // maybe a reference error because no `Map`. Give it a dummy value that no\n  // value will ever be an instanceof.\n  nativeMap = function() {};\n}\n\nvar nativeSet;\ntry {\n  nativeSet = Set;\n} catch(_) {\n  nativeSet = function() {};\n}\n\nvar nativePromise;\ntry {\n  nativePromise = Promise;\n} catch(_) {\n  nativePromise = function() {};\n}\n\n/**\n * Clones (copies) an Object using deep copying.\n *\n * This function supports circular references by default, but if you are certain\n * there are no circular references in your object, you can save some CPU time\n * by calling clone(obj, false).\n *\n * Caution: if `circular` is false and `parent` contains circular references,\n * your program may enter an infinite loop and crash.\n *\n * @param `parent` - the object to be cloned\n * @param `circular` - set to true if the object to be cloned may contain\n *    circular references. (optional - true by default)\n * @param `depth` - set to a number if the object is only to be cloned to\n *    a particular depth. (optional - defaults to Infinity)\n * @param `prototype` - sets the prototype to be used when cloning an object.\n *    (optional - defaults to parent prototype).\n * @param `includeNonEnumerable` - set to true if the non-enumerable properties\n *    should be cloned as well. Non-enumerable properties on the prototype\n *    chain will be ignored. (optional - false by default)\n*/\nfunction clone(parent, circular, depth, prototype, includeNonEnumerable) {\n  if (typeof circular === 'object') {\n    depth = circular.depth;\n    prototype = circular.prototype;\n    includeNonEnumerable = circular.includeNonEnumerable;\n    circular = circular.circular;\n  }\n  // maintain two arrays for circular references, where corresponding parents\n  // and children have the same index\n  var allParents = [];\n  var allChildren = [];\n\n  var useBuffer = typeof Buffer != 'undefined';\n\n  if (typeof circular == 'undefined')\n    circular = true;\n\n  if (typeof depth == 'undefined')\n    depth = Infinity;\n\n  // recurse this function so we don't reset allParents and allChildren\n  function _clone(parent, depth) {\n    // cloning null always returns null\n    if (parent === null)\n      return null;\n\n    if (depth === 0)\n      return parent;\n\n    var child;\n    var proto;\n    if (typeof parent != 'object') {\n      return parent;\n    }\n\n    if (_instanceof(parent, nativeMap)) {\n      child = new nativeMap();\n    } else if (_instanceof(parent, nativeSet)) {\n      child = new nativeSet();\n    } else if (_instanceof(parent, nativePromise)) {\n      child = new nativePromise(function (resolve, reject) {\n        parent.then(function(value) {\n          resolve(_clone(value, depth - 1));\n        }, function(err) {\n          reject(_clone(err, depth - 1));\n        });\n      });\n    } else if (clone.__isArray(parent)) {\n      child = [];\n    } else if (clone.__isRegExp(parent)) {\n      child = new RegExp(parent.source, __getRegExpFlags(parent));\n      if (parent.lastIndex) child.lastIndex = parent.lastIndex;\n    } else if (clone.__isDate(parent)) {\n      child = new Date(parent.getTime());\n    } else if (useBuffer && Buffer.isBuffer(parent)) {\n      if (Buffer.allocUnsafe) {\n        // Node.js >= 4.5.0\n        child = Buffer.allocUnsafe(parent.length);\n      } else {\n        // Older Node.js versions\n        child = new Buffer(parent.length);\n      }\n      parent.copy(child);\n      return child;\n    } else if (_instanceof(parent, Error)) {\n      child = Object.create(parent);\n    } else {\n      if (typeof prototype == 'undefined') {\n        proto = Object.getPrototypeOf(parent);\n        child = Object.create(proto);\n      }\n      else {\n        child = Object.create(prototype);\n        proto = prototype;\n      }\n    }\n\n    if (circular) {\n      var index = allParents.indexOf(parent);\n\n      if (index != -1) {\n        return allChildren[index];\n      }\n      allParents.push(parent);\n      allChildren.push(child);\n    }\n\n    if (_instanceof(parent, nativeMap)) {\n      parent.forEach(function(value, key) {\n        var keyChild = _clone(key, depth - 1);\n        var valueChild = _clone(value, depth - 1);\n        child.set(keyChild, valueChild);\n      });\n    }\n    if (_instanceof(parent, nativeSet)) {\n      parent.forEach(function(value) {\n        var entryChild = _clone(value, depth - 1);\n        child.add(entryChild);\n      });\n    }\n\n    for (var i in parent) {\n      var attrs;\n      if (proto) {\n        attrs = Object.getOwnPropertyDescriptor(proto, i);\n      }\n\n      if (attrs && attrs.set == null) {\n        continue;\n      }\n      child[i] = _clone(parent[i], depth - 1);\n    }\n\n    if (Object.getOwnPropertySymbols) {\n      var symbols = Object.getOwnPropertySymbols(parent);\n      for (var i = 0; i < symbols.length; i++) {\n        // Don't need to worry about cloning a symbol because it is a primitive,\n        // like a number or string.\n        var symbol = symbols[i];\n        var descriptor = Object.getOwnPropertyDescriptor(parent, symbol);\n        if (descriptor && !descriptor.enumerable && !includeNonEnumerable) {\n          continue;\n        }\n        child[symbol] = _clone(parent[symbol], depth - 1);\n        if (!descriptor.enumerable) {\n          Object.defineProperty(child, symbol, {\n            enumerable: false\n          });\n        }\n      }\n    }\n\n    if (includeNonEnumerable) {\n      var allPropertyNames = Object.getOwnPropertyNames(parent);\n      for (var i = 0; i < allPropertyNames.length; i++) {\n        var propertyName = allPropertyNames[i];\n        var descriptor = Object.getOwnPropertyDescriptor(parent, propertyName);\n        if (descriptor && descriptor.enumerable) {\n          continue;\n        }\n        child[propertyName] = _clone(parent[propertyName], depth - 1);\n        Object.defineProperty(child, propertyName, {\n          enumerable: false\n        });\n      }\n    }\n\n    return child;\n  }\n\n  return _clone(parent, depth);\n}\n\n/**\n * Simple flat clone using prototype, accepts only objects, usefull for property\n * override on FLAT configuration object (no nested props).\n *\n * USE WITH CAUTION! This may not behave as you wish if you do not know how this\n * works.\n */\nclone.clonePrototype = function clonePrototype(parent) {\n  if (parent === null)\n    return null;\n\n  var c = function () {};\n  c.prototype = parent;\n  return new c();\n};\n\n// private utility functions\n\nfunction __objToStr(o) {\n  return Object.prototype.toString.call(o);\n}\nclone.__objToStr = __objToStr;\n\nfunction __isDate(o) {\n  return typeof o === 'object' && __objToStr(o) === '[object Date]';\n}\nclone.__isDate = __isDate;\n\nfunction __isArray(o) {\n  return typeof o === 'object' && __objToStr(o) === '[object Array]';\n}\nclone.__isArray = __isArray;\n\nfunction __isRegExp(o) {\n  return typeof o === 'object' && __objToStr(o) === '[object RegExp]';\n}\nclone.__isRegExp = __isRegExp;\n\nfunction __getRegExpFlags(re) {\n  var flags = '';\n  if (re.global) flags += 'g';\n  if (re.ignoreCase) flags += 'i';\n  if (re.multiline) flags += 'm';\n  return flags;\n}\nclone.__getRegExpFlags = __getRegExpFlags;\n\nreturn clone;\n})();\n\nif (typeof module === 'object' && module.exports) {\n  module.exports = clone;\n}\n","\"use strict\";\r\n\r\n//https://docs.aws.amazon.com/AWSJavaScriptSDK/latest/AWS/DynamoDB.html#putItem-property\r\n\r\nfunction DynamoDbDataType() {\r\n    this._is = {\r\n        BufferSet: true,\r\n        NumberSet: true,\r\n        StringSet: true,\r\n        List: true\r\n    };\r\n}\r\nDynamoDbDataType.primaryTypeOf = function(value) {\r\n    if(value === null) {\r\n        return \"null\";\r\n    }\r\n    if(Buffer.isBuffer(value)) {\r\n        return \"Buffer\";\r\n    }\r\n    if(Array.isArray(value)) {\r\n        return \"Array\";\r\n    }\r\n    return typeof(value);\r\n};\r\nDynamoDbDataType.type2id = {\r\n    \"Buffer\": \"B\",\r\n    \"BufferSet\": \"BS\",\r\n    \"boolean\": \"BOOL\",\r\n    \"List\": \"L\",\r\n    \"object\": \"M\",\r\n    \"number\": \"N\",\r\n    \"NumberSet\": \"NS\",\r\n    \"string\": \"S\",\r\n    \"StringSet\": \"SS\",\r\n};\r\nDynamoDbDataType.prototype.countPossibleType = function() {\r\n    var count = 0;\r\n    Object.keys(this._is).forEach(function(key) {\r\n        if(this._is[key]) {\r\n            count++;\r\n        }\r\n    }.bind(this));\r\n    return count;\r\n};\r\nDynamoDbDataType.prototype.getPossibleType = function() {\r\n    var type = null;\r\n    var count = 0;\r\n    Object.keys(this._is).forEach(function(key) {\r\n        if(this._is[key]) {\r\n            type = key;\r\n            count++;\r\n        }\r\n    }.bind(this));\r\n    if(count > 1) {\r\n        type = false;\r\n    }\r\n    return type;\r\n};\r\nDynamoDbDataType.prototype.getPredictedType = function() {\r\n    var count = this.countPossibleType();\r\n    if(count > 1 && this._is.List) {\r\n        this._is.List = false;\r\n        count--;\r\n    }\r\n    var type = null;\r\n    switch(count) {\r\n        case 0:\r\n            type = null;\r\n            break;\r\n        case 1:\r\n            type = this.getPossibleType();\r\n            break;\r\n        default:\r\n            type = false;\r\n            break;\r\n    }\r\n    return type;\r\n};\r\nDynamoDbDataType.prototype.checkElementType = function(element) {\r\n    switch(DynamoDbDataType.primaryTypeOf(element)) {\r\n        case \"Buffer\":\r\n            this._is.NumberSet = false;\r\n            this._is.StringSet = false;\r\n            break;\r\n        case \"number\":\r\n            this._is.BufferSet = false;\r\n            this._is.StringSet = false;\r\n            break;\r\n        case \"string\":\r\n            this._is.BufferSet = false;\r\n            this._is.NumberSet = false;\r\n            break;\r\n        default:\r\n            this._is.BufferSet = false;\r\n            this._is.StringSet = false;\r\n            this._is.NumberSet = false;\r\n            break;\r\n    }\r\n    return this.getPossibleType();\r\n};\r\nDynamoDbDataType.detect = function(value) {\r\n    var type = DynamoDbDataType.primaryTypeOf(value);\r\n    if(type == \"Array\") {\r\n        var detector = new DynamoDbDataType();\r\n        var arrtype = false;\r\n        var len = value.length;\r\n        for(var i = 0; i < len && arrtype === false; i++) {\r\n            arrtype = detector.checkElementType(value[i]);\r\n        }\r\n        if(arrtype == false || arrtype == null) {\r\n            arrtype = detector.getPredictedType();\r\n        }\r\n        type = arrtype;\r\n    }\r\n    return type;\r\n};\r\nmodule.exports = DynamoDbDataType;\r\n","\"use strict\";\r\nvar DynamoDbDataType = require(\"./dynamodb-data-type.js\");\r\nfunction DynamoDbDataModels() {}\r\nDynamoDbDataModels.obj2map = function(value) {\r\n    if(value == \"null\") {\r\n        throw new Error(\"Cannot convert null\");\r\n    }\r\n    var type = DynamoDbDataType.detect(value);\r\n    var typeid = DynamoDbDataType.type2id[type];\r\n    var map = {};\r\n    switch(type) {\r\n        case \"Buffer\":\r\n            if(typeof(value) == \"string\") {\r\n                map[typeid] = Buffer.from(value, \"base64\");\r\n            } else {\r\n                map[typeid] = value;\r\n            }\r\n            break;\r\n        case \"boolean\":\r\n            map[typeid] = (value ? \"true\" : \"false\");\r\n            break;\r\n        case \"object\":\r\n            {\r\n                let obj = {};\r\n                Object.keys(value).forEach(function(key) {\r\n                    obj[key] = DynamoDbDataModels.obj2map(value[key]);\r\n                });\r\n                map[typeid] = obj;\r\n            }\r\n            break;\r\n        case \"List\":\r\n            {\r\n                let obj = [];\r\n                value.forEach(function(element) {\r\n                    obj.push(DynamoDbDataModels.obj2map(element));\r\n                });\r\n                map[typeid] = obj;\r\n            }\r\n            break;\r\n        case \"BufferSet\":\r\n        case \"StringSet\":\r\n            {\r\n                let obj = [];\r\n                value.forEach(function(element) {\r\n                    obj.push(element);\r\n                });\r\n                map[typeid] = obj;\r\n            }\r\n            break;\r\n        case \"NumberSet\":\r\n            {\r\n                let obj = [];\r\n                value.forEach(function(element) {\r\n                    obj.push(\"\" + element);\r\n                });\r\n                map[typeid] = obj;\r\n            }\r\n            break;\r\n        case \"number\":\r\n            map[typeid] = (\"\" + value);\r\n            break;\r\n        case \"undefined\":\r\n            throw new Error(\"Cannot convert undefind\");\r\n        default:\r\n            map[typeid] = value;\r\n            break;\r\n    }\r\n    return map;\r\n};\r\nDynamoDbDataModels.map2obj = function(map) {\r\n    var obj = {};\r\n    Object.keys(map).forEach(function(key) {\r\n        Object.keys(map[key]).forEach(function(type) {\r\n            var value = map[key][type];\r\n            switch(type) {\r\n            case \"S\":\r\n                obj[key] = value;\r\n                break;\r\n            case \"N\":\r\n                obj[key] = parseInt(value);\r\n                break;\r\n            case \"BOOL\":\r\n                obj[key] = (value==\"true\");\r\n                break;\r\n            case \"M\":\r\n                obj[key] = DynamoDbDataModels.map2obj(value);\r\n                break;\r\n            }\r\n        });\r\n    });\r\n    return obj;\r\n};\r\n\r\nmodule.exports = DynamoDbDataModels;\r\n","/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar w = d * 7;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isNaN(val) === false) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^((?:\\d+)?\\-?\\d?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'weeks':\n    case 'week':\n    case 'w':\n      return n * w;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (msAbs >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (msAbs >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (msAbs >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return plural(ms, msAbs, d, 'day');\n  }\n  if (msAbs >= h) {\n    return plural(ms, msAbs, h, 'hour');\n  }\n  if (msAbs >= m) {\n    return plural(ms, msAbs, m, 'minute');\n  }\n  if (msAbs >= s) {\n    return plural(ms, msAbs, s, 'second');\n  }\n  return ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, msAbs, n, name) {\n  var isPlural = msAbs >= n * 1.5;\n  return Math.round(ms / n) + ' ' + name + (isPlural ? 's' : '');\n}\n","\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n */\n\nfunction setup(env) {\n\tcreateDebug.debug = createDebug;\n\tcreateDebug.default = createDebug;\n\tcreateDebug.coerce = coerce;\n\tcreateDebug.disable = disable;\n\tcreateDebug.enable = enable;\n\tcreateDebug.enabled = enabled;\n\tcreateDebug.humanize = require('ms');\n\n\tObject.keys(env).forEach(key => {\n\t\tcreateDebug[key] = env[key];\n\t});\n\n\t/**\n\t* Active `debug` instances.\n\t*/\n\tcreateDebug.instances = [];\n\n\t/**\n\t* The currently active debug mode names, and names to skip.\n\t*/\n\n\tcreateDebug.names = [];\n\tcreateDebug.skips = [];\n\n\t/**\n\t* Map of special \"%n\" handling functions, for the debug \"format\" argument.\n\t*\n\t* Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n\t*/\n\tcreateDebug.formatters = {};\n\n\t/**\n\t* Selects a color for a debug namespace\n\t* @param {String} namespace The namespace string for the for the debug instance to be colored\n\t* @return {Number|String} An ANSI color code for the given namespace\n\t* @api private\n\t*/\n\tfunction selectColor(namespace) {\n\t\tlet hash = 0;\n\n\t\tfor (let i = 0; i < namespace.length; i++) {\n\t\t\thash = ((hash << 5) - hash) + namespace.charCodeAt(i);\n\t\t\thash |= 0; // Convert to 32bit integer\n\t\t}\n\n\t\treturn createDebug.colors[Math.abs(hash) % createDebug.colors.length];\n\t}\n\tcreateDebug.selectColor = selectColor;\n\n\t/**\n\t* Create a debugger with the given `namespace`.\n\t*\n\t* @param {String} namespace\n\t* @return {Function}\n\t* @api public\n\t*/\n\tfunction createDebug(namespace) {\n\t\tlet prevTime;\n\n\t\tfunction debug(...args) {\n\t\t\t// Disabled?\n\t\t\tif (!debug.enabled) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst self = debug;\n\n\t\t\t// Set `diff` timestamp\n\t\t\tconst curr = Number(new Date());\n\t\t\tconst ms = curr - (prevTime || curr);\n\t\t\tself.diff = ms;\n\t\t\tself.prev = prevTime;\n\t\t\tself.curr = curr;\n\t\t\tprevTime = curr;\n\n\t\t\targs[0] = createDebug.coerce(args[0]);\n\n\t\t\tif (typeof args[0] !== 'string') {\n\t\t\t\t// Anything else let's inspect with %O\n\t\t\t\targs.unshift('%O');\n\t\t\t}\n\n\t\t\t// Apply any `formatters` transformations\n\t\t\tlet index = 0;\n\t\t\targs[0] = args[0].replace(/%([a-zA-Z%])/g, (match, format) => {\n\t\t\t\t// If we encounter an escaped % then don't increase the array index\n\t\t\t\tif (match === '%%') {\n\t\t\t\t\treturn match;\n\t\t\t\t}\n\t\t\t\tindex++;\n\t\t\t\tconst formatter = createDebug.formatters[format];\n\t\t\t\tif (typeof formatter === 'function') {\n\t\t\t\t\tconst val = args[index];\n\t\t\t\t\tmatch = formatter.call(self, val);\n\n\t\t\t\t\t// Now we need to remove `args[index]` since it's inlined in the `format`\n\t\t\t\t\targs.splice(index, 1);\n\t\t\t\t\tindex--;\n\t\t\t\t}\n\t\t\t\treturn match;\n\t\t\t});\n\n\t\t\t// Apply env-specific formatting (colors, etc.)\n\t\t\tcreateDebug.formatArgs.call(self, args);\n\n\t\t\tconst logFn = self.log || createDebug.log;\n\t\t\tlogFn.apply(self, args);\n\t\t}\n\n\t\tdebug.namespace = namespace;\n\t\tdebug.enabled = createDebug.enabled(namespace);\n\t\tdebug.useColors = createDebug.useColors();\n\t\tdebug.color = selectColor(namespace);\n\t\tdebug.destroy = destroy;\n\t\tdebug.extend = extend;\n\t\t// Debug.formatArgs = formatArgs;\n\t\t// debug.rawLog = rawLog;\n\n\t\t// env-specific initialization logic for debug instances\n\t\tif (typeof createDebug.init === 'function') {\n\t\t\tcreateDebug.init(debug);\n\t\t}\n\n\t\tcreateDebug.instances.push(debug);\n\n\t\treturn debug;\n\t}\n\n\tfunction destroy() {\n\t\tconst index = createDebug.instances.indexOf(this);\n\t\tif (index !== -1) {\n\t\t\tcreateDebug.instances.splice(index, 1);\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tfunction extend(namespace, delimiter) {\n\t\tconst newDebug = createDebug(this.namespace + (typeof delimiter === 'undefined' ? ':' : delimiter) + namespace);\n\t\tnewDebug.log = this.log;\n\t\treturn newDebug;\n\t}\n\n\t/**\n\t* Enables a debug mode by namespaces. This can include modes\n\t* separated by a colon and wildcards.\n\t*\n\t* @param {String} namespaces\n\t* @api public\n\t*/\n\tfunction enable(namespaces) {\n\t\tcreateDebug.save(namespaces);\n\n\t\tcreateDebug.names = [];\n\t\tcreateDebug.skips = [];\n\n\t\tlet i;\n\t\tconst split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n\t\tconst len = split.length;\n\n\t\tfor (i = 0; i < len; i++) {\n\t\t\tif (!split[i]) {\n\t\t\t\t// ignore empty strings\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tnamespaces = split[i].replace(/\\*/g, '.*?');\n\n\t\t\tif (namespaces[0] === '-') {\n\t\t\t\tcreateDebug.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n\t\t\t} else {\n\t\t\t\tcreateDebug.names.push(new RegExp('^' + namespaces + '$'));\n\t\t\t}\n\t\t}\n\n\t\tfor (i = 0; i < createDebug.instances.length; i++) {\n\t\t\tconst instance = createDebug.instances[i];\n\t\t\tinstance.enabled = createDebug.enabled(instance.namespace);\n\t\t}\n\t}\n\n\t/**\n\t* Disable debug output.\n\t*\n\t* @return {String} namespaces\n\t* @api public\n\t*/\n\tfunction disable() {\n\t\tconst namespaces = [\n\t\t\t...createDebug.names.map(toNamespace),\n\t\t\t...createDebug.skips.map(toNamespace).map(namespace => '-' + namespace)\n\t\t].join(',');\n\t\tcreateDebug.enable('');\n\t\treturn namespaces;\n\t}\n\n\t/**\n\t* Returns true if the given mode name is enabled, false otherwise.\n\t*\n\t* @param {String} name\n\t* @return {Boolean}\n\t* @api public\n\t*/\n\tfunction enabled(name) {\n\t\tif (name[name.length - 1] === '*') {\n\t\t\treturn true;\n\t\t}\n\n\t\tlet i;\n\t\tlet len;\n\n\t\tfor (i = 0, len = createDebug.skips.length; i < len; i++) {\n\t\t\tif (createDebug.skips[i].test(name)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\tfor (i = 0, len = createDebug.names.length; i < len; i++) {\n\t\t\tif (createDebug.names[i].test(name)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t* Convert regexp to namespace\n\t*\n\t* @param {RegExp} regxep\n\t* @return {String} namespace\n\t* @api private\n\t*/\n\tfunction toNamespace(regexp) {\n\t\treturn regexp.toString()\n\t\t\t.substring(2, regexp.toString().length - 2)\n\t\t\t.replace(/\\.\\*\\?$/, '*');\n\t}\n\n\t/**\n\t* Coerce `val`.\n\t*\n\t* @param {Mixed} val\n\t* @return {Mixed}\n\t* @api private\n\t*/\n\tfunction coerce(val) {\n\t\tif (val instanceof Error) {\n\t\t\treturn val.stack || val.message;\n\t\t}\n\t\treturn val;\n\t}\n\n\tcreateDebug.enable(createDebug.load());\n\n\treturn createDebug;\n}\n\nmodule.exports = setup;\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","/* eslint-env browser */\n\n/**\n * This is the web browser implementation of `debug()`.\n */\n\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = localstorage();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n\t'#0000CC',\n\t'#0000FF',\n\t'#0033CC',\n\t'#0033FF',\n\t'#0066CC',\n\t'#0066FF',\n\t'#0099CC',\n\t'#0099FF',\n\t'#00CC00',\n\t'#00CC33',\n\t'#00CC66',\n\t'#00CC99',\n\t'#00CCCC',\n\t'#00CCFF',\n\t'#3300CC',\n\t'#3300FF',\n\t'#3333CC',\n\t'#3333FF',\n\t'#3366CC',\n\t'#3366FF',\n\t'#3399CC',\n\t'#3399FF',\n\t'#33CC00',\n\t'#33CC33',\n\t'#33CC66',\n\t'#33CC99',\n\t'#33CCCC',\n\t'#33CCFF',\n\t'#6600CC',\n\t'#6600FF',\n\t'#6633CC',\n\t'#6633FF',\n\t'#66CC00',\n\t'#66CC33',\n\t'#9900CC',\n\t'#9900FF',\n\t'#9933CC',\n\t'#9933FF',\n\t'#99CC00',\n\t'#99CC33',\n\t'#CC0000',\n\t'#CC0033',\n\t'#CC0066',\n\t'#CC0099',\n\t'#CC00CC',\n\t'#CC00FF',\n\t'#CC3300',\n\t'#CC3333',\n\t'#CC3366',\n\t'#CC3399',\n\t'#CC33CC',\n\t'#CC33FF',\n\t'#CC6600',\n\t'#CC6633',\n\t'#CC9900',\n\t'#CC9933',\n\t'#CCCC00',\n\t'#CCCC33',\n\t'#FF0000',\n\t'#FF0033',\n\t'#FF0066',\n\t'#FF0099',\n\t'#FF00CC',\n\t'#FF00FF',\n\t'#FF3300',\n\t'#FF3333',\n\t'#FF3366',\n\t'#FF3399',\n\t'#FF33CC',\n\t'#FF33FF',\n\t'#FF6600',\n\t'#FF6633',\n\t'#FF9900',\n\t'#FF9933',\n\t'#FFCC00',\n\t'#FFCC33'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\n// eslint-disable-next-line complexity\nfunction useColors() {\n\t// NB: In an Electron preload script, document will be defined but not fully\n\t// initialized. Since we know we're in Chrome, we'll just detect this case\n\t// explicitly\n\tif (typeof window !== 'undefined' && window.process && (window.process.type === 'renderer' || window.process.__nwjs)) {\n\t\treturn true;\n\t}\n\n\t// Internet Explorer and Edge do not support colors.\n\tif (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\n\t\treturn false;\n\t}\n\n\t// Is webkit? http://stackoverflow.com/a/16459606/376773\n\t// document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n\treturn (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n\t\t// Is firebug? http://stackoverflow.com/a/398120/376773\n\t\t(typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n\t\t// Is firefox >= v31?\n\t\t// https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||\n\t\t// Double check webkit in userAgent just in case we are in a worker\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n\targs[0] = (this.useColors ? '%c' : '') +\n\t\tthis.namespace +\n\t\t(this.useColors ? ' %c' : ' ') +\n\t\targs[0] +\n\t\t(this.useColors ? '%c ' : ' ') +\n\t\t'+' + module.exports.humanize(this.diff);\n\n\tif (!this.useColors) {\n\t\treturn;\n\t}\n\n\tconst c = 'color: ' + this.color;\n\targs.splice(1, 0, c, 'color: inherit');\n\n\t// The final \"%c\" is somewhat tricky, because there could be other\n\t// arguments passed either before or after the %c, so we need to\n\t// figure out the correct index to insert the CSS into\n\tlet index = 0;\n\tlet lastC = 0;\n\targs[0].replace(/%[a-zA-Z%]/g, match => {\n\t\tif (match === '%%') {\n\t\t\treturn;\n\t\t}\n\t\tindex++;\n\t\tif (match === '%c') {\n\t\t\t// We only are interested in the *last* %c\n\t\t\t// (the user may have provided their own)\n\t\t\tlastC = index;\n\t\t}\n\t});\n\n\targs.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.log()` when available.\n * No-op when `console.log` is not a \"function\".\n *\n * @api public\n */\nfunction log(...args) {\n\t// This hackery is required for IE8/9, where\n\t// the `console.log` function doesn't have 'apply'\n\treturn typeof console === 'object' &&\n\t\tconsole.log &&\n\t\tconsole.log(...args);\n}\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\nfunction save(namespaces) {\n\ttry {\n\t\tif (namespaces) {\n\t\t\texports.storage.setItem('debug', namespaces);\n\t\t} else {\n\t\t\texports.storage.removeItem('debug');\n\t\t}\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\nfunction load() {\n\tlet r;\n\ttry {\n\t\tr = exports.storage.getItem('debug');\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n\n\t// If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n\tif (!r && typeof process !== 'undefined' && 'env' in process) {\n\t\tr = process.env.DEBUG;\n\t}\n\n\treturn r;\n}\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n\ttry {\n\t\t// TVMLKit (Apple TV JS Runtime) does not have a window object, just localStorage in the global context\n\t\t// The Browser also has localStorage in the global context.\n\t\treturn localStorage;\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\nmodule.exports = require('./common')(exports);\n\nconst {formatters} = module.exports;\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nformatters.j = function (v) {\n\ttry {\n\t\treturn JSON.stringify(v);\n\t} catch (error) {\n\t\treturn '[UnexpectedJSONParseError]: ' + error.message;\n\t}\n};\n","'use strict';\n\nvar toStr = Object.prototype.toString;\n\nmodule.exports = function isArguments(value) {\n\tvar str = toStr.call(value);\n\tvar isArgs = str === '[object Arguments]';\n\tif (!isArgs) {\n\t\tisArgs = str !== '[object Array]' &&\n\t\t\tvalue !== null &&\n\t\t\ttypeof value === 'object' &&\n\t\t\ttypeof value.length === 'number' &&\n\t\t\tvalue.length >= 0 &&\n\t\t\ttoStr.call(value.callee) === '[object Function]';\n\t}\n\treturn isArgs;\n};\n","'use strict';\n\nvar keysShim;\nif (!Object.keys) {\n\t// modified from https://github.com/es-shims/es5-shim\n\tvar has = Object.prototype.hasOwnProperty;\n\tvar toStr = Object.prototype.toString;\n\tvar isArgs = require('./isArguments'); // eslint-disable-line global-require\n\tvar isEnumerable = Object.prototype.propertyIsEnumerable;\n\tvar hasDontEnumBug = !isEnumerable.call({ toString: null }, 'toString');\n\tvar hasProtoEnumBug = isEnumerable.call(function () {}, 'prototype');\n\tvar dontEnums = [\n\t\t'toString',\n\t\t'toLocaleString',\n\t\t'valueOf',\n\t\t'hasOwnProperty',\n\t\t'isPrototypeOf',\n\t\t'propertyIsEnumerable',\n\t\t'constructor'\n\t];\n\tvar equalsConstructorPrototype = function (o) {\n\t\tvar ctor = o.constructor;\n\t\treturn ctor && ctor.prototype === o;\n\t};\n\tvar excludedKeys = {\n\t\t$applicationCache: true,\n\t\t$console: true,\n\t\t$external: true,\n\t\t$frame: true,\n\t\t$frameElement: true,\n\t\t$frames: true,\n\t\t$innerHeight: true,\n\t\t$innerWidth: true,\n\t\t$onmozfullscreenchange: true,\n\t\t$onmozfullscreenerror: true,\n\t\t$outerHeight: true,\n\t\t$outerWidth: true,\n\t\t$pageXOffset: true,\n\t\t$pageYOffset: true,\n\t\t$parent: true,\n\t\t$scrollLeft: true,\n\t\t$scrollTop: true,\n\t\t$scrollX: true,\n\t\t$scrollY: true,\n\t\t$self: true,\n\t\t$webkitIndexedDB: true,\n\t\t$webkitStorageInfo: true,\n\t\t$window: true\n\t};\n\tvar hasAutomationEqualityBug = (function () {\n\t\t/* global window */\n\t\tif (typeof window === 'undefined') { return false; }\n\t\tfor (var k in window) {\n\t\t\ttry {\n\t\t\t\tif (!excludedKeys['$' + k] && has.call(window, k) && window[k] !== null && typeof window[k] === 'object') {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tequalsConstructorPrototype(window[k]);\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}());\n\tvar equalsConstructorPrototypeIfNotBuggy = function (o) {\n\t\t/* global window */\n\t\tif (typeof window === 'undefined' || !hasAutomationEqualityBug) {\n\t\t\treturn equalsConstructorPrototype(o);\n\t\t}\n\t\ttry {\n\t\t\treturn equalsConstructorPrototype(o);\n\t\t} catch (e) {\n\t\t\treturn false;\n\t\t}\n\t};\n\n\tkeysShim = function keys(object) {\n\t\tvar isObject = object !== null && typeof object === 'object';\n\t\tvar isFunction = toStr.call(object) === '[object Function]';\n\t\tvar isArguments = isArgs(object);\n\t\tvar isString = isObject && toStr.call(object) === '[object String]';\n\t\tvar theKeys = [];\n\n\t\tif (!isObject && !isFunction && !isArguments) {\n\t\t\tthrow new TypeError('Object.keys called on a non-object');\n\t\t}\n\n\t\tvar skipProto = hasProtoEnumBug && isFunction;\n\t\tif (isString && object.length > 0 && !has.call(object, 0)) {\n\t\t\tfor (var i = 0; i < object.length; ++i) {\n\t\t\t\ttheKeys.push(String(i));\n\t\t\t}\n\t\t}\n\n\t\tif (isArguments && object.length > 0) {\n\t\t\tfor (var j = 0; j < object.length; ++j) {\n\t\t\t\ttheKeys.push(String(j));\n\t\t\t}\n\t\t} else {\n\t\t\tfor (var name in object) {\n\t\t\t\tif (!(skipProto && name === 'prototype') && has.call(object, name)) {\n\t\t\t\t\ttheKeys.push(String(name));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (hasDontEnumBug) {\n\t\t\tvar skipConstructor = equalsConstructorPrototypeIfNotBuggy(object);\n\n\t\t\tfor (var k = 0; k < dontEnums.length; ++k) {\n\t\t\t\tif (!(skipConstructor && dontEnums[k] === 'constructor') && has.call(object, dontEnums[k])) {\n\t\t\t\t\ttheKeys.push(dontEnums[k]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn theKeys;\n\t};\n}\nmodule.exports = keysShim;\n","'use strict';\n\nvar slice = Array.prototype.slice;\nvar isArgs = require('./isArguments');\n\nvar origKeys = Object.keys;\nvar keysShim = origKeys ? function keys(o) { return origKeys(o); } : require('./implementation');\n\nvar originalKeys = Object.keys;\n\nkeysShim.shim = function shimObjectKeys() {\n\tif (Object.keys) {\n\t\tvar keysWorksWithArguments = (function () {\n\t\t\t// Safari 5.0 bug\n\t\t\tvar args = Object.keys(arguments);\n\t\t\treturn args && args.length === arguments.length;\n\t\t}(1, 2));\n\t\tif (!keysWorksWithArguments) {\n\t\t\tObject.keys = function keys(object) { // eslint-disable-line func-name-matching\n\t\t\t\tif (isArgs(object)) {\n\t\t\t\t\treturn originalKeys(slice.call(object));\n\t\t\t\t}\n\t\t\t\treturn originalKeys(object);\n\t\t\t};\n\t\t}\n\t} else {\n\t\tObject.keys = keysShim;\n\t}\n\treturn Object.keys || keysShim;\n};\n\nmodule.exports = keysShim;\n","'use strict';\n\nvar hasToStringTag = typeof Symbol === 'function' && typeof Symbol.toStringTag === 'symbol';\nvar toStr = Object.prototype.toString;\n\nvar isStandardArguments = function isArguments(value) {\n\tif (hasToStringTag && value && typeof value === 'object' && Symbol.toStringTag in value) {\n\t\treturn false;\n\t}\n\treturn toStr.call(value) === '[object Arguments]';\n};\n\nvar isLegacyArguments = function isArguments(value) {\n\tif (isStandardArguments(value)) {\n\t\treturn true;\n\t}\n\treturn value !== null &&\n\t\ttypeof value === 'object' &&\n\t\ttypeof value.length === 'number' &&\n\t\tvalue.length >= 0 &&\n\t\ttoStr.call(value) !== '[object Array]' &&\n\t\ttoStr.call(value.callee) === '[object Function]';\n};\n\nvar supportsStandardArguments = (function () {\n\treturn isStandardArguments(arguments);\n}());\n\nisStandardArguments.isLegacyArguments = isLegacyArguments; // for tests\n\nmodule.exports = supportsStandardArguments ? isStandardArguments : isLegacyArguments;\n","\"use strict\";\n\n/* https://people.mozilla.org/~jorendorff/es6-draft.html#sec-object.is */\n\nvar NumberIsNaN = function (value) {\n\treturn value !== value;\n};\n\nmodule.exports = function is(a, b) {\n\tif (a === 0 && b === 0) {\n\t\treturn 1 / a === 1 / b;\n\t} else if (a === b) {\n\t\treturn true;\n\t} else if (NumberIsNaN(a) && NumberIsNaN(b)) {\n\t\treturn true;\n\t}\n\treturn false;\n};\n\n","'use strict';\n\n/* eslint no-invalid-this: 1 */\n\nvar ERROR_MESSAGE = 'Function.prototype.bind called on incompatible ';\nvar slice = Array.prototype.slice;\nvar toStr = Object.prototype.toString;\nvar funcType = '[object Function]';\n\nmodule.exports = function bind(that) {\n    var target = this;\n    if (typeof target !== 'function' || toStr.call(target) !== funcType) {\n        throw new TypeError(ERROR_MESSAGE + target);\n    }\n    var args = slice.call(arguments, 1);\n\n    var bound;\n    var binder = function () {\n        if (this instanceof bound) {\n            var result = target.apply(\n                this,\n                args.concat(slice.call(arguments))\n            );\n            if (Object(result) === result) {\n                return result;\n            }\n            return this;\n        } else {\n            return target.apply(\n                that,\n                args.concat(slice.call(arguments))\n            );\n        }\n    };\n\n    var boundLength = Math.max(0, target.length - args.length);\n    var boundArgs = [];\n    for (var i = 0; i < boundLength; i++) {\n        boundArgs.push('$' + i);\n    }\n\n    bound = Function('binder', 'return function (' + boundArgs.join(',') + '){ return binder.apply(this,arguments); }')(binder);\n\n    if (target.prototype) {\n        var Empty = function Empty() {};\n        Empty.prototype = target.prototype;\n        bound.prototype = new Empty();\n        Empty.prototype = null;\n    }\n\n    return bound;\n};\n","'use strict';\n\nvar implementation = require('./implementation');\n\nmodule.exports = Function.prototype.bind || implementation;\n","'use strict';\n\nvar bind = require('function-bind');\n\nmodule.exports = bind.call(Function.call, Object.prototype.hasOwnProperty);\n","'use strict';\n\nvar has = require('has');\nvar regexExec = RegExp.prototype.exec;\nvar gOPD = Object.getOwnPropertyDescriptor;\n\nvar tryRegexExecCall = function tryRegexExec(value) {\n\ttry {\n\t\tvar lastIndex = value.lastIndex;\n\t\tvalue.lastIndex = 0;\n\n\t\tregexExec.call(value);\n\t\treturn true;\n\t} catch (e) {\n\t\treturn false;\n\t} finally {\n\t\tvalue.lastIndex = lastIndex;\n\t}\n};\nvar toStr = Object.prototype.toString;\nvar regexClass = '[object RegExp]';\nvar hasToStringTag = typeof Symbol === 'function' && typeof Symbol.toStringTag === 'symbol';\n\nmodule.exports = function isRegex(value) {\n\tif (!value || typeof value !== 'object') {\n\t\treturn false;\n\t}\n\tif (!hasToStringTag) {\n\t\treturn toStr.call(value) === regexClass;\n\t}\n\n\tvar descriptor = gOPD(value, 'lastIndex');\n\tvar hasLastIndexDataProperty = descriptor && has(descriptor, 'value');\n\tif (!hasLastIndexDataProperty) {\n\t\treturn false;\n\t}\n\n\treturn tryRegexExecCall(value);\n};\n","'use strict';\n\nvar keys = require('object-keys');\nvar hasSymbols = typeof Symbol === 'function' && typeof Symbol('foo') === 'symbol';\n\nvar toStr = Object.prototype.toString;\nvar concat = Array.prototype.concat;\nvar origDefineProperty = Object.defineProperty;\n\nvar isFunction = function (fn) {\n\treturn typeof fn === 'function' && toStr.call(fn) === '[object Function]';\n};\n\nvar arePropertyDescriptorsSupported = function () {\n\tvar obj = {};\n\ttry {\n\t\torigDefineProperty(obj, 'x', { enumerable: false, value: obj });\n\t\t// eslint-disable-next-line no-unused-vars, no-restricted-syntax\n\t\tfor (var _ in obj) { // jscs:ignore disallowUnusedVariables\n\t\t\treturn false;\n\t\t}\n\t\treturn obj.x === obj;\n\t} catch (e) { /* this is IE 8. */\n\t\treturn false;\n\t}\n};\nvar supportsDescriptors = origDefineProperty && arePropertyDescriptorsSupported();\n\nvar defineProperty = function (object, name, value, predicate) {\n\tif (name in object && (!isFunction(predicate) || !predicate())) {\n\t\treturn;\n\t}\n\tif (supportsDescriptors) {\n\t\torigDefineProperty(object, name, {\n\t\t\tconfigurable: true,\n\t\t\tenumerable: false,\n\t\t\tvalue: value,\n\t\t\twritable: true\n\t\t});\n\t} else {\n\t\tobject[name] = value;\n\t}\n};\n\nvar defineProperties = function (object, map) {\n\tvar predicates = arguments.length > 2 ? arguments[2] : {};\n\tvar props = keys(map);\n\tif (hasSymbols) {\n\t\tprops = concat.call(props, Object.getOwnPropertySymbols(map));\n\t}\n\tfor (var i = 0; i < props.length; i += 1) {\n\t\tdefineProperty(object, props[i], map[props[i]], predicates[props[i]]);\n\t}\n};\n\ndefineProperties.supportsDescriptors = !!supportsDescriptors;\n\nmodule.exports = defineProperties;\n","'use strict';\n\nvar toObject = Object;\nvar TypeErr = TypeError;\n\nmodule.exports = function flags() {\n\tif (this != null && this !== toObject(this)) {\n\t\tthrow new TypeErr('RegExp.prototype.flags getter called on non-object');\n\t}\n\tvar result = '';\n\tif (this.global) {\n\t\tresult += 'g';\n\t}\n\tif (this.ignoreCase) {\n\t\tresult += 'i';\n\t}\n\tif (this.multiline) {\n\t\tresult += 'm';\n\t}\n\tif (this.dotAll) {\n\t\tresult += 's';\n\t}\n\tif (this.unicode) {\n\t\tresult += 'u';\n\t}\n\tif (this.sticky) {\n\t\tresult += 'y';\n\t}\n\treturn result;\n};\n","'use strict';\n\nvar implementation = require('./implementation');\n\nvar supportsDescriptors = require('define-properties').supportsDescriptors;\nvar gOPD = Object.getOwnPropertyDescriptor;\nvar TypeErr = TypeError;\n\nmodule.exports = function getPolyfill() {\n\tif (!supportsDescriptors) {\n\t\tthrow new TypeErr('RegExp.prototype.flags requires a true ES5 environment that supports property descriptors');\n\t}\n\tif (/a/mig.flags === 'gim') {\n\t\tvar descriptor = gOPD(RegExp.prototype, 'flags');\n\t\tif (descriptor && typeof descriptor.get === 'function' && typeof (/a/).dotAll === 'boolean') {\n\t\t\treturn descriptor.get;\n\t\t}\n\t}\n\treturn implementation;\n};\n","'use strict';\n\nvar supportsDescriptors = require('define-properties').supportsDescriptors;\nvar getPolyfill = require('./polyfill');\nvar gOPD = Object.getOwnPropertyDescriptor;\nvar defineProperty = Object.defineProperty;\nvar TypeErr = TypeError;\nvar getProto = Object.getPrototypeOf;\nvar regex = /a/;\n\nmodule.exports = function shimFlags() {\n\tif (!supportsDescriptors || !getProto) {\n\t\tthrow new TypeErr('RegExp.prototype.flags requires a true ES5 environment that supports property descriptors');\n\t}\n\tvar polyfill = getPolyfill();\n\tvar proto = getProto(regex);\n\tvar descriptor = gOPD(proto, 'flags');\n\tif (!descriptor || descriptor.get !== polyfill) {\n\t\tdefineProperty(proto, 'flags', {\n\t\t\tconfigurable: true,\n\t\t\tenumerable: false,\n\t\t\tget: polyfill\n\t\t});\n\t}\n\treturn polyfill;\n};\n","'use strict';\n\nvar define = require('define-properties');\n\nvar implementation = require('./implementation');\nvar getPolyfill = require('./polyfill');\nvar shim = require('./shim');\n\nvar flagsBound = Function.call.bind(implementation);\n\ndefine(flagsBound, {\n\tgetPolyfill: getPolyfill,\n\timplementation: implementation,\n\tshim: shim\n});\n\nmodule.exports = flagsBound;\n","'use strict';\n\nvar getDay = Date.prototype.getDay;\nvar tryDateObject = function tryDateObject(value) {\n\ttry {\n\t\tgetDay.call(value);\n\t\treturn true;\n\t} catch (e) {\n\t\treturn false;\n\t}\n};\n\nvar toStr = Object.prototype.toString;\nvar dateClass = '[object Date]';\nvar hasToStringTag = typeof Symbol === 'function' && typeof Symbol.toStringTag === 'symbol';\n\nmodule.exports = function isDateObject(value) {\n\tif (typeof value !== 'object' || value === null) { return false; }\n\treturn hasToStringTag ? tryDateObject(value) : toStr.call(value) === dateClass;\n};\n","var objectKeys = require('object-keys');\nvar isArguments = require('is-arguments');\nvar is = require('object-is');\nvar isRegex = require('is-regex');\nvar flags = require('regexp.prototype.flags');\nvar isDate = require('is-date-object');\n\nvar getTime = Date.prototype.getTime;\n\nfunction deepEqual(actual, expected, options) {\n  var opts = options || {};\n\n  // 7.1. All identical values are equivalent, as determined by ===.\n  if (opts.strict ? is(actual, expected) : actual === expected) {\n    return true;\n  }\n\n  // 7.3. Other pairs that do not both pass typeof value == 'object', equivalence is determined by ==.\n  if (!actual || !expected || (typeof actual !== 'object' && typeof expected !== 'object')) {\n    return opts.strict ? is(actual, expected) : actual == expected;\n  }\n\n  /*\n   * 7.4. For all other Object pairs, including Array objects, equivalence is\n   * determined by having the same number of owned properties (as verified\n   * with Object.prototype.hasOwnProperty.call), the same set of keys\n   * (although not necessarily the same order), equivalent values for every\n   * corresponding key, and an identical 'prototype' property. Note: this\n   * accounts for both named and indexed properties on Arrays.\n   */\n  // eslint-disable-next-line no-use-before-define\n  return objEquiv(actual, expected, opts);\n}\n\nfunction isUndefinedOrNull(value) {\n  return value === null || value === undefined;\n}\n\nfunction isBuffer(x) {\n  if (!x || typeof x !== 'object' || typeof x.length !== 'number') {\n    return false;\n  }\n  if (typeof x.copy !== 'function' || typeof x.slice !== 'function') {\n    return false;\n  }\n  if (x.length > 0 && typeof x[0] !== 'number') {\n    return false;\n  }\n  return true;\n}\n\nfunction objEquiv(a, b, opts) {\n  /* eslint max-statements: [2, 50] */\n  var i, key;\n  if (typeof a !== typeof b) { return false; }\n  if (isUndefinedOrNull(a) || isUndefinedOrNull(b)) { return false; }\n\n  // an identical 'prototype' property.\n  if (a.prototype !== b.prototype) { return false; }\n\n  if (isArguments(a) !== isArguments(b)) { return false; }\n\n  var aIsRegex = isRegex(a);\n  var bIsRegex = isRegex(b);\n  if (aIsRegex !== bIsRegex) { return false; }\n  if (aIsRegex || bIsRegex) {\n    return a.source === b.source && flags(a) === flags(b);\n  }\n\n  if (isDate(a) && isDate(b)) {\n    return getTime.call(a) === getTime.call(b);\n  }\n\n  var aIsBuffer = isBuffer(a);\n  var bIsBuffer = isBuffer(b);\n  if (aIsBuffer !== bIsBuffer) { return false; }\n  if (aIsBuffer || bIsBuffer) { // && would work too, because both are true or both false here\n    if (a.length !== b.length) { return false; }\n    for (i = 0; i < a.length; i++) {\n      if (a[i] !== b[i]) { return false; }\n    }\n    return true;\n  }\n\n  if (typeof a !== typeof b) { return false; }\n\n  try {\n    var ka = objectKeys(a);\n    var kb = objectKeys(b);\n  } catch (e) { // happens when one is a string literal and the other isn't\n    return false;\n  }\n  // having the same number of owned properties (keys incorporates hasOwnProperty)\n  if (ka.length !== kb.length) { return false; }\n\n  // the same set of keys (although not necessarily the same order),\n  ka.sort();\n  kb.sort();\n  // ~~~cheap key test\n  for (i = ka.length - 1; i >= 0; i--) {\n    if (ka[i] != kb[i]) { return false; }\n  }\n  // equivalent values for every corresponding key, and ~~~possibly expensive deep test\n  for (i = ka.length - 1; i >= 0; i--) {\n    key = ka[i];\n    if (!deepEqual(a[key], b[key], opts)) { return false; }\n  }\n\n  return true;\n}\n\nmodule.exports = deepEqual;\n","\"use strict\";\r\n/**\r\n * Token class.\r\n * @constructor\r\n */\r\nfunction Token() {\r\n    this._charbuf = [];\r\n    this._term = \"\";\r\n    this._type = null;\r\n    this._lineNumber = 0;\r\n    this._col = 0;\r\n}\r\n\r\n/**\r\n * A getter for the term.\r\n * @returns {string} a term.\r\n */\r\nToken.prototype.getTerm = function() {\r\n    return this._term;\r\n};\r\n\r\n/**\r\n * A setter for the term.\r\n * @param {string} term a term to be set.\r\n * @returns {undefined}\r\n */\r\nToken.prototype.setTerm = function(term) {\r\n    this._term = term;\r\n    this._charbuf = [];\r\n};\r\n\r\n/**\r\n * Set the token position.\r\n * @param {number} lineNumber A line number.\r\n * @param {number} col A column position.\r\n * @returns {undefined}\r\n */\r\nToken.prototype.setPos = function(lineNumber, col) {\r\n    this._lineNumber = lineNumber;\r\n    this._col = col;\r\n};\r\n\r\n/**\r\n * Get a line number of this token.\r\n * @returns {number} A line number.\r\n */\r\nToken.prototype.getLineNumber = function() {\r\n    return this._lineNumber;\r\n};\r\n\r\n/**\r\n * Get a column position of this token.\r\n * @returns {number} A line number.\r\n */\r\nToken.prototype.getColumn = function() {\r\n    return this._col;\r\n};\r\n\r\n/**\r\n * A setter for this type.\r\n * @param {string} type A type name of this token.\r\n * @returns {undefined}\r\n */\r\nToken.prototype.setType = function(type) {\r\n    this._type = type;\r\n};\r\n\r\n/**\r\n * A getter for this type.\r\n * @returns {string} A type name of this token.\r\n */\r\nToken.prototype.getType = function() {\r\n    return this._type;\r\n};\r\n\r\n/**\r\n * Push a character to unfixed term buffer.\r\n * @param {string} c A character.\r\n * @returns {undefined}\r\n */\r\nToken.prototype.pushChar  = function(c) {\r\n    this._charbuf.push(c);\r\n};\r\n\r\n/**\r\n * Fix a term buffer.\r\n * @returns {undefined}\r\n */\r\nToken.prototype.fixTerm = function() {\r\n    this._term = this._charbuf.join('');\r\n    this._charbuf = [];\r\n};\r\n\r\n/**\r\n * Test if this term is a kind of white-spaces.\r\n * @returns {boolean} The test result.\r\n */\r\nToken.prototype.isWhiteSpace = function() {\r\n    var t = this.getType();\r\n    return t === \"WS\" || t === \"WS-LINCMT\" || t === \"WS-BLKCMT\";\r\n};\r\n\r\nmodule.exports = Token;\r\n","\"use strict\";\r\nconst Token = require(\"./token.js\");\r\n\r\n/**\r\n * Lexical essentially tokenizer.\r\n * @constructor\r\n */\r\nfunction LexAnalyzer() {\r\n    this._mode = \"\";\r\n    this._tokenList = [];\r\n    this._token = null;\r\n    this._source = \"\";\r\n    this._lineNum = 1;\r\n    this._columnPos = 1;\r\n    this._i = 0;\r\n    this._c = null;\r\n}\r\n\r\n/**\r\n * Parse lexical tokesn.\r\n * @param {string} source The source text to be parse.\r\n * @returns {Array<Token>} The result of parsing.\r\n */\r\nLexAnalyzer.parse = function(source) {\r\n    let tokenizer = new LexAnalyzer();\r\n    return tokenizer.parse(source);\r\n};\r\n\r\n/**\r\n * Test if the character is a kind of white-spaces.\r\n * @param {string} c a character.\r\n * @returns {boolean} the test result.\r\n */\r\nLexAnalyzer.isWhite = function(c) {\r\n    return c.match(/^\\s/);\r\n};\r\n\r\n/**\r\n * Test if the character is a kind of punctuaters.\r\n * @param {string} c a character.\r\n * @returns {boolean} the test result.\r\n */\r\nLexAnalyzer.isPunct = function(c) {\r\n    return c.match(/^[!\"#$%&'()-=^~\\\\|@[{;+:*\\]},<.>/?_]/);\r\n};\r\n\r\n/**\r\n * Test if the character is a kind of alphabet.\r\n * @param {string} c a character.\r\n * @returns {boolean} the test result.\r\n */\r\nLexAnalyzer.isAlpha = function(c) {\r\n    return c.match(/^[_a-z]/i);\r\n};\r\n\r\n/**\r\n * Test if the character is a kind of alphabet or number.\r\n * @param {string} c a character.\r\n * @returns {boolean} the test result.\r\n */\r\nLexAnalyzer.isAlnum = function(c) {\r\n    return c.match(/^[_a-z0-9]/i);\r\n};\r\n\r\n/**\r\n * Test if the character is a kind of digits.\r\n * @param {string} c a character.\r\n * @returns {boolean} the test result.\r\n */\r\nLexAnalyzer.isDigit = function(c) {\r\n    return c.match(/^[0-9]/);\r\n};\r\n\r\n/**\r\n * Parse lexical tokesn.\r\n * @param {string} source The source text to be parse.\r\n * @returns {Array<Token>} The result of parsing.\r\n */\r\nLexAnalyzer.prototype.parse = function(source) {\r\n    this._mode = \"\";\r\n    this._tokenList = [];\r\n    this._token = null;\r\n    this._lineNum = 1;\r\n    this._columnPos = 1;\r\n    this._i = 0;\r\n    this._c = null;\r\n    this._source = source;\r\n    while(this._i < this._source.length) {\r\n        this._c = this._source.charAt(this._i);\r\n        switch(this._mode) {\r\n            case \"\":\r\n                this.parseDefault();\r\n                break;\r\n            case \"WS\":\r\n                this.parseWhiteSpace();\r\n                break;\r\n            case \"IDENT\":\r\n                this.parseIdentifier();\r\n                break;\r\n            case \"NUMLIT\":\r\n                this.parseNumberLiteral();\r\n                break;\r\n        }\r\n        ++this._i;\r\n        ++this._columnPos;\r\n    }\r\n    if(this._token != null) {\r\n        this.finishToken();\r\n    }\r\n    return this._tokenList;\r\n};\r\n\r\n/**\r\n * Parse in initial state.\r\n * @returns {undefined}\r\n */\r\nLexAnalyzer.prototype.parseDefault = function() {\r\n    this._token = new Token();\r\n    this._token.setPos(this._lineNum, this._columnPos);\r\n    if(LexAnalyzer.isWhite(this._c)) {\r\n        this._token.pushChar(this._c);\r\n        this._mode = \"WS\";\r\n    } else if(LexAnalyzer.isAlpha(this._c)) {\r\n        this._token.pushChar(this._c);\r\n        this._mode = \"IDENT\";\r\n    } else if(LexAnalyzer.isDigit(this._c)) {\r\n        this._token.pushChar(this._c);\r\n        this._mode = \"NUMLIT\";\r\n    } else if(LexAnalyzer.isPunct(this._c)) {\r\n        this._token.pushChar(this._c);\r\n        this.finishToken(\"PUNCT\");\r\n    }\r\n};\r\n\r\n/**\r\n * Parse white-spaces.\r\n * @returns {undefined}\r\n */\r\nLexAnalyzer.prototype.parseWhiteSpace = function() {\r\n    if(LexAnalyzer.isWhite(this._c)) {\r\n        this._token.pushChar(this._c);\r\n        if(this._c == \"\\n\") {\r\n            this._columnPos = 0;\r\n            this._lineNum++;\r\n        }\r\n    } else {\r\n        this.finishToken();\r\n        this.ungetChar();\r\n    }\r\n};\r\n\r\n/**\r\n * Parse an identifier.\r\n * @returns {undefined}\r\n */\r\nLexAnalyzer.prototype.parseIdentifier = function() {\r\n    if(LexAnalyzer.isAlnum(this._c)) {\r\n        this._token.pushChar(this._c);\r\n    } else {\r\n        this.finishToken();\r\n        this.ungetChar();\r\n    }\r\n};\r\n\r\n/**\r\n * Parse a number literal.\r\n * @returns {undefined}\r\n */\r\nLexAnalyzer.prototype.parseNumberLiteral = function() {\r\n    if(this._c.match(/^[0-9a-z]$/i)) {\r\n        this._token.pushChar(this._c);\r\n    } else {\r\n        this.finishToken();\r\n        this.ungetChar();\r\n    }\r\n};\r\n\r\n/**\r\n * Finish the token parsing.\r\n * @param {string} mode A mode name to be set to the token finally.\r\n * If this parameter is null, the tokenizer's currently mode is used.\r\n * @returns {undefined}\r\n */\r\nLexAnalyzer.prototype.finishToken = function(mode) {\r\n    this._token.setType(mode || this._mode);\r\n    this._token.fixTerm();\r\n    this._tokenList.push(this._token);\r\n    this._token = null;\r\n    this._mode = \"\";\r\n};\r\n\r\n/**\r\n * Push back the parsing char.\r\n * @returns {undefined}\r\n */\r\nLexAnalyzer.prototype.ungetChar = function() {\r\n    --this._i;\r\n    --this._columnPos;\r\n};\r\n\r\nmodule.exports = LexAnalyzer;\r\n","\"use strict\";\r\nconst debug = require(\"debug\")(\"BnfResult\");\r\n\r\n/**\r\n * BNF parsing result object.\r\n * @constructor\r\n */\r\nfunction BnfResult() {\r\n    this._syntaxError = false;\r\n    this.terms = [];\r\n    this.lexCount = 0;\r\n}\r\n\r\nBnfResult.prototype.existsTerm = function(name) {\r\n    let term = this.getTerm(name);\r\n    if(term !== false) {\r\n        return term.match;\r\n    }\r\n    return false;\r\n};\r\n\r\nBnfResult.prototype.getTerm = function(name) {\r\n    let n = this.terms.length;\r\n    for(let i = 0; i < n; i++) {\r\n        if(this.terms[i].term === name) {\r\n            return this.terms[i];\r\n        }\r\n    }\r\n    return false;\r\n};\r\n\r\nBnfResult.prototype.getWordsList = function(termName, indent) {\r\n    termName = termName || \"*\";\r\n    indent = indent || 0;\r\n    let words = [];\r\n    this.terms.forEach(function(term) {\r\n        if(term.match) {\r\n            if(termName === \"*\" || term.term === termName) {\r\n                let subWords = term.getTermsList();\r\n                words.push(subWords);\r\n            } else {\r\n                let subWords = term.getWordsList(termName, indent + 1);\r\n                subWords.forEach((subWord)=>{\r\n                    words.push(subWord);\r\n                });\r\n            }\r\n        }\r\n    });\r\n    return words;\r\n};\r\n\r\nBnfResult.prototype.getTermsList = function(indent) {\r\n    indent = indent || 0;\r\n    let s = [];\r\n    this.terms.forEach(function(term) {\r\n        if(term.terms.length == 0) {\r\n            if(term.lex) {\r\n                s.push(term.lex.getTerm());\r\n            }\r\n        } else {\r\n            term.getTermsList(indent+1).forEach(function(term) {\r\n                s.push(term);\r\n            });\r\n        }\r\n    });\r\n    return s;\r\n};\r\n\r\n/**\r\n * Search parsed language elements having specified name.\r\n * @param {string} name definition name to search\r\n * @returns {Array<BnfResult>} found elements\r\n * @deprecated Use BnfResult#enumerate(name)\r\n */\r\nBnfResult.prototype.getTermListOf = function(name) {\r\n    debug(`BnfResult.getTermListOf(${name})`);\r\n    debug(`this: ${this.toString()}`);\r\n    const list = [];\r\n    this.enumerate(name, result => list.push(result));\r\n    debug(`BnfResult.getTermListOf returns:`);\r\n    debug(`${list.map(e=>e.toString()).join(\"\\n\")}`);\r\n    return list;\r\n};\r\n\r\n/**\r\n * Enumerate parsed language elements having specified name.\r\n * @param {string} name definition name to search\r\n * @param {Function} callback function that takes one parameter which is\r\n *  instance of BnfResult enumerated.\r\n * @returns {undefined}\r\n */\r\nBnfResult.prototype.enumerate = function(name, callback) {\r\n    debug(`BnfResult.enumerate(${name})`);\r\n    debug(`this: ${this.toString()}`);\r\n    const enumerate = result => {\r\n        if(result.term === name) {\r\n            debug(`BnfResult.enumerate callback ${result.toString()}`);\r\n            callback(result);\r\n        } else {\r\n            result.terms.forEach(term => enumerate(term));\r\n        }\r\n    };\r\n    enumerate(this);\r\n};\r\n\r\n/**\r\n * Bind descendent terms to one token.\r\n * @param {string} type A type name for the result token.\r\n * @returns {Token} The result token.\r\n */\r\nBnfResult.prototype.buildWord = function(type) {\r\n    let lex = null;\r\n    let s = [];\r\n    this.terms.forEach( term => {\r\n        let subLex = null;\r\n        if(term.lex != null) {\r\n            subLex = term.lex;\r\n        } else {\r\n            subLex = term.buildWord( type );\r\n        }\r\n        if(subLex != null) {\r\n            if(lex == null) {\r\n                lex = subLex;\r\n            }\r\n            s.push(subLex.getTerm());\r\n        }\r\n    });\r\n    if(lex != null) {\r\n        lex.setType(type);\r\n        lex.setTerm(s.join(\"\"));\r\n    }\r\n    return lex;\r\n};\r\n\r\n/**\r\n * Get token list that the type name of all terms is rewritten by the rule of\r\n * specified parameters.\r\n * @param {Array<string>} termsOfWord The type names that should be rewrited.\r\n * @param {object} linkedWordTokenTypeMap The new type names pointed by old name.\r\n * @returns {Array<Token>} The list of tokens that the type was replaced\r\n */\r\nBnfResult.prototype.rebuildWords = function(\r\n        termsOfWord, linkedWordTokenTypeMap)\r\n{\r\n    let lexList = [];\r\n    this.terms.forEach( childTerm => {\r\n        if(childTerm.match) {\r\n            let term = childTerm.term;\r\n            if(typeof(term) === \"string\"\r\n                && termsOfWord.indexOf(term) >= 0)\r\n            {\r\n                let lexType = linkedWordTokenTypeMap[term];\r\n                let lex = childTerm.buildWord(lexType);\r\n                lexList.push(lex);\r\n            } else {\r\n                let childLex = childTerm.lex;\r\n                if(childLex != null) {\r\n                    lexList.push(childLex);\r\n                }\r\n                childTerm.rebuildWords(\r\n                    termsOfWord, linkedWordTokenTypeMap\r\n                ).forEach( lex => { lexList.push(lex); });\r\n            }\r\n        }\r\n    });\r\n    return lexList;\r\n};\r\n\r\n/**\r\n * Stringify this object.\r\n * @returns {string} representing the content recursively.\r\n */\r\nBnfResult.prototype.toString = function() {\r\n    const _toString = (result, i) => {\r\n        const indent = \" \".repeat(i*4);\r\n        if(!Array.isArray(result.terms) || result.terms.length == 0) {\r\n            const lex = result.lex;\r\n            if(lex == null) {\r\n                return `${indent}! lex is null`;\r\n            } else {\r\n                return `${indent}- (${lex._lineNumber},${lex._col}) : ${JSON.stringify(lex._term)} : ${lex._type}`;\r\n            }\r\n        } else {\r\n            return `${indent}+ [${result.term}]\\n${result.terms.map( term => _toString(term, i+1) ).join(\"\\n\")}`;\r\n        }\r\n    };\r\n    return _toString(this, 0);\r\n};\r\n\r\nmodule.exports = BnfResult;\r\n","\"use strict\";\r\nconst debug = require(\"debug\")(\"BNF\");\r\nconst deepEqual = require(\"deep-equal\");\r\nconst LexAnalyzer = require(\"./lexana.js\");\r\nconst BnfResult = require(\"./bnf-result.js\");\r\n\r\n/**\r\n * BNF processor.\r\n * @constructor\r\n * @param {string} root The root term name that must be in bnf object as a key.\r\n * @param {object} bnf The BNF definition object.\r\n * @param {object} linkedWordTokenTypeMap The word definition.\r\n */\r\nfunction BNF(root, bnf, linkedWordTokenTypeMap) {\r\n    this._root = root;\r\n    this._bnf = bnf;\r\n    this._linkedWordTokenTypeMap = linkedWordTokenTypeMap;\r\n    this._termsOfWord =\r\n        (linkedWordTokenTypeMap == null ? [] :\r\n            Object.keys(linkedWordTokenTypeMap));\r\n}\r\n\r\nBNF.literal = function(value) {\r\n    return {\r\n        role: \"lit\",\r\n        value: value,\r\n        inverse: false,\r\n    };\r\n};\r\n\r\nBNF.literalUntil = function(value) {\r\n    return {\r\n        role: \"lit\",\r\n        value: value,\r\n        inverse: true,\r\n    };\r\n};\r\n\r\nBNF.lex = function(value) {\r\n    return {\r\n        role: \"lex\",\r\n        value: value,\r\n        inverse: false,\r\n    };\r\n};\r\n\r\nBNF.lexTypeUntil = function(value) {\r\n    return {\r\n        role: \"lex\",\r\n        value: value,\r\n        inverse: true,\r\n    };\r\n};\r\n\r\nBNF.ident = BNF.lex(\"IDENT\");\r\nBNF.numlit = BNF.lex(\"NUMLIT\");\r\nBNF.strlitDQ = BNF.lex(\"STRLIT-DQ\");\r\nBNF.strlitSQ = BNF.lex(\"STRLIT-SQ\");\r\nBNF.comma = BNF.literal(\",\");\r\n\r\n/**\r\n * Parse the source text with this BNF definition.\r\n * @param {string} source the input text.\r\n * @param {BNF} tokenizer the tokenizer defining words.\r\n * @returns {Array<BnfResult>} the result of parsing.\r\n * @deprecated Use BNF.tokenize and BNF#parseTokens\r\n */\r\nBNF.prototype.parse = function(source, tokenizer) {\r\n    debug(`BNF.parse source: ${source}`);\r\n    let tokens = BNF.tokenize(source, tokenizer);\r\n    if(tokens != null && !Array.isArray(tokens) && !tokens.match) {\r\n        debug(`BNF.parse returns ${tokens.constructor.name} ${JSON.stringify(tokens, null, 2)}`);\r\n        return tokens; // tokens is BnfResult object.\r\n    }\r\n    debug(`BNF.parse tokens:\\n${tokens.map(t=>JSON.stringify(t)).join(\"\\n\")}`);\r\n    const result = this.parseSentence(this._root, tokens, 0, 0);\r\n    //debug(`BNF.parse returns ${result.constructor.name}\\n${JSON.stringify(result, null, 4)}`);\r\n    debug(`${result.constructor.name}\\n${result.toString()}`);\r\n    //debug(`BNF.parse returns ${result.map(item=>JSON.stringify(item)).join(\"\\n\")}`);\r\n    return result;\r\n};\r\n\r\n/**\r\n * Tokenize the source text.\r\n *\r\n * TOKENIZE\r\n * --------\r\n *\r\n * At first, `source` is converted to a token list by `LexAnalyzer.parse`.\r\n *\r\n * BINDING TOKENS\r\n * --------------\r\n *\r\n * And if the parameter `tokenizer` is a BNF object, `tokenizer.buildWords`\r\n * binds the specific tokens in the list and converts it to a new token.\r\n *\r\n * REMOVING WHITE SPACES\r\n * ---------------------\r\n *\r\n * By default, all the white space tokens in the list are removed.\r\n * But if the `tokenizer` is `false`, the binding words and removing the tokens\r\n * are not done.\r\n *\r\n * @param {string} source the input text.\r\n * @param {BNF|boolean|undefined} tokenizer the tokenizer defining words\r\n *  binding or false not to invoke buildWords and remove the white spaces\r\n *  from tokens.\r\n * @returns {Array<BnfResult>} the word list.\r\n */\r\nBNF.tokenize = function(source, tokenizer) {\r\n    debug(`BNF.tokenize source: ${source}`);\r\n    let tokens = LexAnalyzer.parse(source);\r\n    if(tokenizer != null && tokenizer.constructor === BNF) {\r\n        debug(`BNF.tokenize tokenizer is NOT null. About to build words`);\r\n        tokens = tokenizer.buildWords(tokens);\r\n    }\r\n    //Remove whitespaces\r\n    if(Array.isArray(tokens) && tokenizer !== false) {\r\n        debug(`BNF.tokenize tokens is Array. About to Remove white spaces`);\r\n        tokens = tokens.filter(\r\n            lex => lex != null && !lex.isWhiteSpace());\r\n    }\r\n    debug(`BNF.parse returns ${tokens.constructor.name} ${JSON.stringify(tokens, null, 2)}`);\r\n    return tokens;\r\n};\r\n\r\n/**\r\n * Build a word list with this BNF definition from given lexical tokens.\r\n * @param {Array<BnfResult>} tokens lexical tokens.\r\n * @returns {Array<BnfResult>} the word list.\r\n */\r\nBNF.prototype.buildWords = function(tokens) {\r\n    for(;;) {\r\n        let result = this.parseSentence(this._root, tokens, 0, 0);\r\n        if(!result.match || result._error) {\r\n            return result;\r\n        }\r\n        let tokens2 = result.rebuildWords(\r\n                this._termsOfWord,\r\n                this._linkedWordTokenTypeMap);\r\n        if(deepEqual(tokens2, tokens)) {\r\n            break;\r\n        } else {\r\n            tokens = tokens2;\r\n        }\r\n    }\r\n    return tokens;\r\n};\r\n\r\n/**\r\n * Parse the token list with this BNF definition.\r\n * @param {Array<BnfResult>} tokens the token list.\r\n * @returns {Array<BnfResult>} the result of parsing.\r\n */\r\nBNF.prototype.parseTokens = function(tokens) {\r\n    let result = this.parseSentence(this._root, tokens, 0, 0);\r\n    return result;\r\n};\r\n\r\nBNF.prototype.parseSentence = function(root, lexList, lexIndex, indent) {\r\n    if(!(root in this._bnf)) {\r\n        throw new Error(root + \" is not declared in BNF\");\r\n    }\r\n    let declaration = this._bnf[root];\r\n    let nDecl = declaration.length;\r\n    declaration.forEach((d,i) => {\r\n        debug(`${\"==\".repeat(indent)}> BNF.parseSentence ${root}[${i}] ${d.map(item=>JSON.stringify(item)).join(\" => \")}`);\r\n    });\r\n\r\n    let sentenceResult = new BnfResult();\r\n    sentenceResult.match = false;\r\n    sentenceResult.term = root;\r\n\r\n    for(let iDecl = 0; iDecl < nDecl; iDecl++) {\r\n        let termList = declaration[iDecl];\r\n        debug(`${\"==\".repeat(indent)}> ${root}[${iDecl}] ${termList.map(item=>JSON.stringify(item)).join(\" => \")}`);\r\n        let termListResult = this.parseTermList(termList, lexList, lexIndex, indent + 1);\r\n        if(termListResult._error) {\r\n            debug(`BNF.parseSentence ERROR: ${JSON.stringify({ iDecl, nDecl, termList })}`);\r\n            debug(`BNF.parseSentence(${JSON.stringify({ root, lex: lexList[lexIndex]._term, lexIndex, indent })}`);\r\n            sentenceResult.match = termListResult.match;\r\n            sentenceResult.lexCount += termListResult.lexCount;\r\n            sentenceResult._error = true;\r\n            break;\r\n        } else if(termListResult.match) {\r\n            sentenceResult.match = true;\r\n            sentenceResult.lexCount += termListResult.lexCount;\r\n            sentenceResult.terms = termListResult.terms;\r\n            debug(`${\"==\".repeat(indent)}> parseSentence MATCH term:${root}: ${JSON.stringify(lexList.slice(lexIndex, lexIndex + sentenceResult.lexCount).map(L=>L._term).join(\" \"))}`);\r\n            debug(`${\"==\".repeat(indent)}> parseSentence termList: ${JSON.stringify(termList)}`);\r\n            break;\r\n        }\r\n    }\r\n    if(!sentenceResult.match) {\r\n        debug(`${\"==\".repeat(indent)}> parseSentence UNMATCH term:${root}`);\r\n        debug(`${\"==\".repeat(indent)}> parseSentence declaration: ${JSON.stringify(declaration)}`);\r\n    }\r\n    return sentenceResult;\r\n};\r\n\r\nBNF.prototype.parseTermList = function(termList, lexList, lexIndex, indent) {\r\n    if(termList == null) {\r\n        throw new Error(\"Illegal termList is entried in BNF --- \" + JSON.stringify(termList));\r\n    }\r\n    let nTerm = termList.length;\r\n\r\n    let termListResult = new BnfResult();\r\n    termListResult.match = true;\r\n\r\n    for(let iTerm = 0; iTerm < nTerm; iTerm++) {\r\n        debug(`${\"--\".repeat(indent)}> parseTermList Loop: ${iTerm}/${nTerm} ${JSON.stringify(termList[iTerm])}`);\r\n        let term = termList[iTerm];\r\n        if(term == null) {\r\n            throw new Error(\"null term is entried at \" + iTerm);\r\n        }\r\n        let termResult = new BnfResult();\r\n        termResult.match = false;\r\n        termResult.lex = null;\r\n        termResult.optional = false;\r\n        termResult.term = term;\r\n\r\n        let termType = typeof(term);\r\n        if(termType != \"string\" && termType !== \"object\" || Array.isArray(term)) {\r\n            throw new Error(\"Illegal BNF definition at \" + JSON.stringify(term));\r\n        }\r\n        if(termType === \"string\") {\r\n            termResult.optional = (term.match(/^\\[.*\\]$/) ? true : false);\r\n            term = term.replace(/^\\[(.*)\\]$/, \"$1\");\r\n            termResult.term = term;\r\n            if(lexIndex < lexList.length) {\r\n                let sentenceResult = this.parseSentence(term, lexList, lexIndex, indent);\r\n                termResult.match = sentenceResult.match;\r\n                termResult._error = sentenceResult._error;\r\n                termResult.terms = sentenceResult.terms;\r\n                if(termResult.match) {\r\n                    termListResult.lexCount += sentenceResult.lexCount;\r\n                    lexIndex += sentenceResult.lexCount;\r\n                }\r\n            }\r\n        } else {\r\n            // term is an object\r\n            if(lexIndex < lexList.length) {\r\n                termResult.lex = lexList[lexIndex];\r\n                let lexValue = null;\r\n                switch(termResult.term.role) {\r\n                    case \"lit\": lexValue = termResult.lex.getTerm(); break;\r\n                    case \"lex\": lexValue = termResult.lex.getType(); break;\r\n                }\r\n\r\n                termResult.match = (lexValue.toUpperCase() === termResult.term.value.toUpperCase());\r\n                debug(`${\"--\".repeat(indent)}> ${termResult.match} ${JSON.stringify(termResult.lex)} ${JSON.stringify(termResult.term)}`);\r\n                debug(`${\"  \".repeat(indent)}> ${lexValue} <=> ${termResult.term.value}`);\r\n                if(termResult.match) {\r\n                    if(!termResult.term.inverse) {\r\n                        termListResult.lexCount++;\r\n                        lexIndex++;\r\n                    } else {\r\n                        termResult.match = true;\r\n                        termListResult.lexCount++;\r\n                        lexIndex++;\r\n                    }\r\n                } else if(termResult.term.inverse) {\r\n                    if(lexIndex < lexList.length - 1) {\r\n                        termResult.match = true;\r\n                        termListResult.lexCount++;\r\n                        lexIndex++;\r\n                        iTerm--;\r\n                    } else {\r\n                        termResult.match = false;\r\n                        termResult._error = true;\r\n                        termListResult.lexCount++;\r\n                        lexIndex++;\r\n                    }\r\n                }\r\n                debug(`${\"--\".repeat(indent)}> BNF.parseTermList test match:${termResult.match} lexValue:${lexValue} == termValue:${termResult.term.value}`);\r\n            }\r\n        }\r\n        termListResult.terms.push(termResult);\r\n        if(termResult._error) {\r\n            debug(`BNF.parseTermList ERROR: ${JSON.stringify({ iTerm, nTerm, term, termType })}`);\r\n            debug(`BNF.parseTermList(${JSON.stringify({ term: termList[0], lex: lexList[0]._term, lexIndex, indent })}`);\r\n            termListResult.match = false;\r\n            termListResult.terms = [];\r\n            termListResult.lexCount = 0;\r\n            termListResult._error = termResult._error;\r\n            break;\r\n        } else if(!termResult.optional && !termResult.match) {\r\n            debug(`BNF.parseTermList NOT MATCH: ${JSON.stringify({ iTerm, nTerm, term, termType })}`);\r\n            debug(`BNF.parseTermList(${JSON.stringify({ term: termList[0], lex: lexList[0]._term, lexIndex, indent })}`);\r\n            termListResult.match = false;\r\n            termListResult.terms = [];\r\n            termListResult.lexCount = 0;\r\n            termListResult._error = termResult._error;\r\n            break;\r\n        }\r\n    }\r\n    return termListResult;\r\n};\r\n\r\nmodule.exports = BNF;\r\n","\"use strict\";\r\nmodule.exports = require(\"./lib/bnf.js\");\r\n","\"use strict\";\r\n\r\n//\r\n// ref https://docs.aws.amazon.com/ja_jp/amazondynamodb/latest/developerguide/ReservedWords.html\r\n//\r\nconst keywords = [\r\n    \"ABORT\", \"ABSOLUTE\", \"ACTION\", \"ADD\", \"AFTER\", \"AGENT\", \"AGGREGATE\", \"ALL\",\r\n    \"ALLOCATE\", \"ALTER\", \"ANALYZE\", \"AND\", \"ANY\", \"ARCHIVE\", \"ARE\", \"ARRAY\",\r\n    \"AS\", \"ASC\", \"ASCII\", \"ASENSITIVE\", \"ASSERTION\", \"ASYMMETRIC\", \"AT\", \"ATOMIC\",\r\n    \"ATTACH\", \"ATTRIBUTE\", \"AUTH\", \"AUTHORIZATION\", \"AUTHORIZE\", \"AUTO\", \"AVG\", \"BACK\",\r\n    \"BACKUP\", \"BASE\", \"BATCH\", \"BEFORE\", \"BEGIN\", \"BETWEEN\", \"BIGINT\", \"BINARY\",\r\n    \"BIT\", \"BLOB\", \"BLOCK\", \"BOOLEAN\", \"BOTH\", \"BREADTH\", \"BUCKET\", \"BULK\",\r\n    \"BY\", \"BYTE\", \"CALL\", \"CALLED\", \"CALLING\", \"CAPACITY\", \"CASCADE\", \"CASCADED\",\r\n    \"CASE\", \"CAST\", \"CATALOG\", \"CHAR\", \"CHARACTER\", \"CHECK\", \"CLASS\", \"CLOB\",\r\n    \"CLOSE\", \"CLUSTER\", \"CLUSTERED\", \"CLUSTERING\", \"CLUSTERS\", \"COALESCE\", \"COLLATE\", \"COLLATION\",\r\n    \"COLLECTION\", \"COLUMN\", \"COLUMNS\", \"COMBINE\", \"COMMENT\", \"COMMIT\", \"COMPACT\", \"COMPILE\",\r\n    \"COMPRESS\", \"CONDITION\", \"CONFLICT\", \"CONNECT\", \"CONNECTION\", \"CONSISTENCY\", \"CONSISTENT\", \"CONSTRAINT\",\r\n    \"CONSTRAINTS\", \"CONSTRUCTOR\", \"CONSUMED\", \"CONTINUE\", \"CONVERT\", \"COPY\", \"CORRESPONDING\", \"COUNT\",\r\n    \"COUNTER\", \"CREATE\", \"CROSS\", \"CUBE\", \"CURRENT\", \"CURSOR\", \"CYCLE\", \"DATA\",\r\n    \"DATABASE\", \"DATE\", \"DATETIME\", \"DAY\", \"DEALLOCATE\", \"DEC\", \"DECIMAL\", \"DECLARE\",\r\n    \"DEFAULT\", \"DEFERRABLE\", \"DEFERRED\", \"DEFINE\", \"DEFINED\", \"DEFINITION\", \"DELETE\", \"DELIMITED\",\r\n    \"DEPTH\", \"DEREF\", \"DESC\", \"DESCRIBE\", \"DESCRIPTOR\", \"DETACH\", \"DETERMINISTIC\", \"DIAGNOSTICS\",\r\n    \"DIRECTORIES\", \"DISABLE\", \"DISCONNECT\", \"DISTINCT\", \"DISTRIBUTE\", \"DO\", \"DOMAIN\", \"DOUBLE\",\r\n    \"DROP\", \"DUMP\", \"DURATION\", \"DYNAMIC\", \"EACH\", \"ELEMENT\", \"ELSE\", \"ELSEIF\",\r\n    \"EMPTY\", \"ENABLE\", \"END\", \"EQUAL\", \"EQUALS\", \"ERROR\", \"ESCAPE\", \"ESCAPED\",\r\n    \"EVAL\", \"EVALUATE\", \"EXCEEDED\", \"EXCEPT\", \"EXCEPTION\", \"EXCEPTIONS\", \"EXCLUSIVE\", \"EXEC\",\r\n    \"EXECUTE\", \"EXISTS\", \"EXIT\", \"EXPLAIN\", \"EXPLODE\", \"EXPORT\", \"EXPRESSION\", \"EXTENDED\",\r\n    \"EXTERNAL\", \"EXTRACT\", \"FAIL\", \"FALSE\", \"FAMILY\", \"FETCH\", \"FIELDS\", \"FILE\",\r\n    \"FILTER\", \"FILTERING\", \"FINAL\", \"FINISH\", \"FIRST\", \"FIXED\", \"FLATTERN\", \"FLOAT\",\r\n    \"FOR\", \"FORCE\", \"FOREIGN\", \"FORMAT\", \"FORWARD\", \"FOUND\", \"FREE\", \"FROM\",\r\n    \"FULL\", \"FUNCTION\", \"FUNCTIONS\", \"GENERAL\", \"GENERATE\", \"GET\", \"GLOB\", \"GLOBAL\",\r\n    \"GO\", \"GOTO\", \"GRANT\", \"GREATER\", \"GROUP\", \"GROUPING\", \"HANDLER\", \"HASH\",\r\n    \"HAVE\", \"HAVING\", \"HEAP\", \"HIDDEN\", \"HOLD\", \"HOUR\", \"IDENTIFIED\", \"IDENTITY\",\r\n    \"IF\", \"IGNORE\", \"IMMEDIATE\", \"IMPORT\", \"IN\", \"INCLUDING\", \"INCLUSIVE\", \"INCREMENT\",\r\n    \"INCREMENTAL\", \"INDEX\", \"INDEXED\", \"INDEXES\", \"INDICATOR\", \"INFINITE\", \"INITIALLY\", \"INLINE\",\r\n    \"INNER\", \"INNTER\", \"INOUT\", \"INPUT\", \"INSENSITIVE\", \"INSERT\", \"INSTEAD\", \"INT\",\r\n    \"INTEGER\", \"INTERSECT\", \"INTERVAL\", \"INTO\", \"INVALIDATE\", \"IS\", \"ISOLATION\", \"ITEM\",\r\n    \"ITEMS\", \"ITERATE\", \"JOIN\", \"KEY\", \"KEYS\", \"LAG\", \"LANGUAGE\", \"LARGE\",\r\n    \"LAST\", \"LATERAL\", \"LEAD\", \"LEADING\", \"LEAVE\", \"LEFT\", \"LENGTH\", \"LESS\",\r\n    \"LEVEL\", \"LIKE\", \"LIMIT\", \"LIMITED\", \"LINES\", \"LIST\", \"LOAD\", \"LOCAL\",\r\n    \"LOCALTIME\", \"LOCALTIMESTAMP\", \"LOCATION\", \"LOCATOR\", \"LOCK\", \"LOCKS\", \"LOG\", \"LOGED\",\r\n    \"LONG\", \"LOOP\", \"LOWER\", \"MAP\", \"MATCH\", \"MATERIALIZED\", \"MAX\", \"MAXLEN\",\r\n    \"MEMBER\", \"MERGE\", \"METHOD\", \"METRICS\", \"MIN\", \"MINUS\", \"MINUTE\", \"MISSING\",\r\n    \"MOD\", \"MODE\", \"MODIFIES\", \"MODIFY\", \"MODULE\", \"MONTH\", \"MULTI\", \"MULTISET\",\r\n    \"NAME\", \"NAMES\", \"NATIONAL\", \"NATURAL\", \"NCHAR\", \"NCLOB\", \"NEW\", \"NEXT\",\r\n    \"NO\", \"NONE\", \"NOT\", \"NULL\", \"NULLIF\", \"NUMBER\", \"NUMERIC\", \"OBJECT\",\r\n    \"OF\", \"OFFLINE\", \"OFFSET\", \"OLD\", \"ON\", \"ONLINE\", \"ONLY\", \"OPAQUE\",\r\n    \"OPEN\", \"OPERATOR\", \"OPTION\", \"OR\", \"ORDER\", \"ORDINALITY\", \"OTHER\", \"OTHERS\",\r\n    \"OUT\", \"OUTER\", \"OUTPUT\", \"OVER\", \"OVERLAPS\", \"OVERRIDE\", \"OWNER\", \"PAD\",\r\n    \"PARALLEL\", \"PARAMETER\", \"PARAMETERS\", \"PARTIAL\", \"PARTITION\", \"PARTITIONED\", \"PARTITIONS\", \"PATH\",\r\n    \"PERCENT\", \"PERCENTILE\", \"PERMISSION\", \"PERMISSIONS\", \"PIPE\", \"PIPELINED\", \"PLAN\", \"POOL\",\r\n    \"POSITION\", \"PRECISION\", \"PREPARE\", \"PRESERVE\", \"PRIMARY\", \"PRIOR\", \"PRIVATE\", \"PRIVILEGES\",\r\n    \"PROCEDURE\", \"PROCESSED\", \"PROJECT\", \"PROJECTION\", \"PROPERTY\", \"PROVISIONING\", \"PUBLIC\", \"PUT\",\r\n    \"QUERY\", \"QUIT\", \"QUORUM\", \"RAISE\", \"RANDOM\", \"RANGE\", \"RANK\", \"RAW\",\r\n    \"READ\", \"READS\", \"REAL\", \"REBUILD\", \"RECORD\", \"RECURSIVE\", \"REDUCE\", \"REF\",\r\n    \"REFERENCE\", \"REFERENCES\", \"REFERENCING\", \"REGEXP\", \"REGION\", \"REINDEX\", \"RELATIVE\", \"RELEASE\",\r\n    \"REMAINDER\", \"RENAME\", \"REPEAT\", \"REPLACE\", \"REQUEST\", \"RESET\", \"RESIGNAL\", \"RESOURCE\",\r\n    \"RESPONSE\", \"RESTORE\", \"RESTRICT\", \"RESULT\", \"RETURN\", \"RETURNING\", \"RETURNS\", \"REVERSE\",\r\n    \"REVOKE\", \"RIGHT\", \"ROLE\", \"ROLES\", \"ROLLBACK\", \"ROLLUP\", \"ROUTINE\", \"ROW\",\r\n    \"ROWS\", \"RULE\", \"RULES\", \"SAMPLE\", \"SATISFIES\", \"SAVE\", \"SAVEPOINT\", \"SCAN\",\r\n    \"SCHEMA\", \"SCOPE\", \"SCROLL\", \"SEARCH\", \"SECOND\", \"SECTION\", \"SEGMENT\", \"SEGMENTS\",\r\n    \"SELECT\", \"SELF\", \"SEMI\", \"SENSITIVE\", \"SEPARATE\", \"SEQUENCE\", \"SERIALIZABLE\", \"SESSION\",\r\n    \"SET\", \"SETS\", \"SHARD\", \"SHARE\", \"SHARED\", \"SHORT\", \"SHOW\", \"SIGNAL\",\r\n    \"SIMILAR\", \"SIZE\", \"SKEWED\", \"SMALLINT\", \"SNAPSHOT\", \"SOME\", \"SOURCE\", \"SPACE\",\r\n    \"SPACES\", \"SPARSE\", \"SPECIFIC\", \"SPECIFICTYPE\", \"SPLIT\", \"SQL\", \"SQLCODE\", \"SQLERROR\",\r\n    \"SQLEXCEPTION\", \"SQLSTATE\", \"SQLWARNING\", \"START\", \"STATE\", \"STATIC\", \"STATUS\", \"STORAGE\",\r\n    \"STORE\", \"STORED\", \"STREAM\", \"STRING\", \"STRUCT\", \"STYLE\", \"SUB\", \"SUBMULTISET\",\r\n    \"SUBPARTITION\", \"SUBSTRING\", \"SUBTYPE\", \"SUM\", \"SUPER\", \"SYMMETRIC\", \"SYNONYM\", \"SYSTEM\",\r\n    \"TABLE\", \"TABLESAMPLE\", \"TEMP\", \"TEMPORARY\", \"TERMINATED\", \"TEXT\", \"THAN\", \"THEN\",\r\n    \"THROUGHPUT\", \"TIME\", \"TIMESTAMP\", \"TIMEZONE\", \"TINYINT\", \"TO\", \"TOKEN\", \"TOTAL\",\r\n    \"TOUCH\", \"TRAILING\", \"TRANSACTION\", \"TRANSFORM\", \"TRANSLATE\", \"TRANSLATION\", \"TREAT\", \"TRIGGER\",\r\n    \"TRIM\", \"TRUE\", \"TRUNCATE\", \"TTL\", \"TUPLE\", \"TYPE\", \"UNDER\", \"UNDO\",\r\n    \"UNION\", \"UNIQUE\", \"UNIT\", \"UNKNOWN\", \"UNLOGGED\", \"UNNEST\", \"UNPROCESSED\", \"UNSIGNED\",\r\n    \"UNTIL\", \"UPDATE\", \"UPPER\", \"URL\", \"USAGE\", \"USE\", \"USER\", \"USERS\",\r\n    \"USING\", \"UUID\", \"VACUUM\", \"VALUE\", \"VALUED\", \"VALUES\", \"VARCHAR\", \"VARIABLE\",\r\n    \"VARIANCE\", \"VARINT\", \"VARYING\", \"VIEW\", \"VIEWS\", \"VIRTUAL\", \"VOID\", \"WAIT\",\r\n    \"WHEN\", \"WHENEVER\", \"WHERE\", \"WHILE\", \"WINDOW\", \"WITH\", \"WITHIN\", \"WITHOUT\",\r\n    \"WORK\", \"WRAPPED\", \"WRITE\", \"YEAR\", \"ZONE\"\r\n];\r\n\r\nconst isKeyword = function(name) {\r\n    return keywords.indexOf(name.toUpperCase()) >= 0;\r\n};\r\n\r\nmodule.exports = {\r\n    keywords,\r\n    isKeyword,\r\n};\r\n","\"use strict\";\r\nvar BNF = require(\"lex-bnf\");\r\n\r\nfunction DynamoDbSqlishParser() {}\r\n\r\n//\r\n// Basic Terms\r\n//\r\nvar CREATE = BNF.literal(\"CREATE\");\r\nvar DROP = BNF.literal(\"DROP\");\r\nvar TABLE = BNF.literal(\"TABLE\");\r\nvar ALTER = BNF.literal(\"ALTER\");\r\nvar SELECT = BNF.literal(\"SELECT\");\r\nvar INSERT = BNF.literal(\"INSERT\");\r\nvar UPDATE = BNF.literal(\"UPDATE\");\r\nvar DELETE = BNF.literal(\"DELETE\");\r\nvar SET = BNF.literal(\"SET\");\r\nvar INTO = BNF.literal(\"INTO\");\r\nvar VALUES = BNF.literal(\"VALUES\");\r\nvar FROM = BNF.literal(\"FROM\");\r\nvar WHERE = BNF.literal(\"WHERE\");\r\nvar FILTER = BNF.literal(\"FILTER\");\r\nvar LIMIT = BNF.literal(\"LIMIT\");\r\nvar BETWEEN = BNF.literal(\"BETWEEN\");\r\nvar AND = BNF.literal(\"AND\");\r\nvar OR = BNF.literal(\"OR\");\r\nvar NOT = BNF.literal(\"NOT\");\r\nvar IN = BNF.literal(\"IN\");\r\n\r\nDynamoDbSqlishParser.BNF = {\r\n    \"sqlish\": [\r\n        [ \"sqlish-create-table\" ],\r\n        [ \"sqlish-update-table\" ],\r\n        [ \"sqlish-delete-table\" ],\r\n        [ BNF.literal(\"SCAN\"), \"sqlish-scan\" ],\r\n        [ BNF.literal(\"QUERY\"), \"sqlish-query\" ],\r\n        [ \"sqlish-put-item\" ],\r\n        [ \"sqlish-set-item\" ],\r\n        [ \"sqlish-delete-item\" ],\r\n    ],\r\n    \"sqlish-create-table\": [\r\n        [ CREATE, TABLE, \"table-name\",\r\n            BNF.literal(\"(\"), \"key-schema-list\", BNF.literal(\")\"),\r\n            \"[create-table-alter-clause]\" ],\r\n    ],\r\n    \"sqlish-update-table\": [\r\n        [ ALTER, TABLE, \"table-name\", \"alter-spec\" ],\r\n    ],\r\n    \"sqlish-delete-table\": [\r\n        [ DROP, TABLE, \"table-name\" ],\r\n    ],\r\n    \"sqlish-scan\": [\r\n        [ \"[select-clause]\", \"from-clause\", \"[where-filter-clause]\",\r\n            \"[limit-clause]\" ],\r\n    ],\r\n    \"sqlish-query\": [\r\n        [ \"[select-clause]\", \"from-clause\", \"where-key-clause\",\r\n            \"[filter-clause]\", \"[limit-clause]\" ],\r\n    ],\r\n    \"sqlish-put-item\": [\r\n        [\r\n            INSERT, INTO, \"table-name\",\r\n            BNF.literal(\"(\"), \"attribute-list\", BNF.literal(\")\"),\r\n            VALUES, BNF.literal(\"(\"), \"value-list\", BNF.literal(\")\"),\r\n            \"[where-key-clause]\"\r\n        ],\r\n    ],\r\n    \"sqlish-set-item\": [\r\n        [\r\n            UPDATE, \"table-name\",\r\n            SET, \"key-value-set\",\r\n            \"where-key-clause\"\r\n        ],\r\n    ],\r\n    \"sqlish-delete-item\": [\r\n        [ DELETE, FROM, \"table-name\", \"[where-delete-key-clause]\" ],\r\n    ],\r\n    \"key-schema-list\": [\r\n        [ \"key-schema\", BNF.comma, \"key-schema-list\" ],\r\n        [ \"key-schema\" ],\r\n    ],\r\n    \"key-schema\": [\r\n        [ \"attribute-name\", \"key-type\", \"key-attribute-type\"],\r\n    ],\r\n    \"create-table-alter-clause\": [\r\n        [ ALTER, \"alter-spec\" ],\r\n    ],\r\n    \"alter-spec\": [\r\n        [BNF.literal(\"(\"), \"alter-specifier-list\", BNF.literal(\")\") ],\r\n        [\"alter-specifier\"],\r\n    ],\r\n    \"alter-specifier-list\": [\r\n        [\"alter-specifier\", BNF.comma, \"alter-specifier-list\"],\r\n        [\"alter-specifier\"],\r\n    ],\r\n    \"alter-specifier\": [\r\n        [ SET, BNF.literal(\"readCapacityUnit\"), BNF.literal(\"=\"), BNF.numlit ],\r\n        [ SET, BNF.literal(\"writeCapacityUnit\"), BNF.literal(\"=\"), BNF.numlit ],\r\n    ],\r\n    \"attribute-list\": [\r\n        [ \"attribute-name\", BNF.comma, \"attribute-list\" ],\r\n        [ \"attribute-name\" ],\r\n    ],\r\n    \"key-value-set\": [\r\n        [ \"key-value\", BNF.comma, \"key-value-set\" ],\r\n        [ \"key-value\" ],\r\n    ],\r\n    \"key-value\": [\r\n        [\"attribute-name\", BNF.literal(\"=\"), \"value\"],\r\n    ],\r\n    \"attribute-name\": [\r\n        [ BNF.ident ],\r\n    ],\r\n    \"select-clause\": [\r\n        [ SELECT, \"key-list\" ],\r\n    ],\r\n    \"key-list\": [\r\n        [ \"column-name\", BNF.comma, \"key-list\" ],\r\n        [ \"column-name\" ],\r\n    ],\r\n    \"column-name\": [\r\n        [ BNF.ident ],\r\n    ],\r\n    \"from-clause\": [\r\n        [ FROM, \"table-name\" ],\r\n    ],\r\n    \"table-name\": [\r\n        [ BNF.ident ],\r\n    ],\r\n    \"where-filter-clause\": [\r\n        [ WHERE, \"condition-expression\" ],\r\n    ],\r\n    \"where-key-clause\": [\r\n        [ WHERE, \"condition-expression\" ],\r\n    ],\r\n    \"where-delete-key-clause\": [\r\n        [ WHERE, \"and-expression\" ],\r\n    ],\r\n    \"filter-clause\": [\r\n        [ FILTER, \"condition-expression\" ],\r\n    ],\r\n    \"condition-expression\" : [\r\n        [ \"or-expression\" ],\r\n    ],\r\n    \"or-expression\" : [\r\n        [ \"and-expression\", OR, \"condition-expression\" ],\r\n        [ \"and-expression\" ],\r\n    ],\r\n    \"and-expression\" : [\r\n        [ \"compare-expression\", AND, \"condition-expression\" ],\r\n        [ \"compare-expression\" ],\r\n    ],\r\n    \"compare-expression\": [\r\n        [ BNF.literal(\"(\"), \"condition-expression\", BNF.literal(\")\") ],\r\n        [ BNF.ident, \"comparator\", \"value\" ],\r\n        [ BNF.ident, BETWEEN, \"between-range\" ],\r\n        [ BNF.ident, IN, BNF.literal(\"(\"), \"value-list\", BNF.literal(\")\") ],\r\n        [ \"function\" ],\r\n        [ NOT, \"condition-expression\" ],\r\n    ],\r\n    \"comparator\": [\r\n        [BNF.literal(\"=\") ],\r\n        [BNF.literal(\"<\") ],\r\n        [BNF.literal(\"<=\") ],\r\n        [BNF.literal(\">\") ],\r\n        [BNF.literal(\">=\") ],\r\n        [BNF.literal(\"<>\") ],\r\n    ],\r\n    \"function\": [\r\n        [ BNF.literal(\"attribute_exists\"), BNF.literal(\"(\"), \"path\", BNF.literal(\")\") ],\r\n        [ BNF.literal(\"attribute_not_exists\"), BNF.literal(\"(\"), \"path\", BNF.literal(\")\") ],\r\n        [ BNF.literal(\"attribute_type\"), BNF.literal(\"(\"),\r\n                \"path\", BNF.comma, \"attribute-type\",\r\n            BNF.literal(\")\") ],\r\n        [ BNF.literal(\"begins_with\"), BNF.literal(\"(\"),\r\n                \"path\", BNF.comma, \"value\",\r\n            BNF.literal(\")\") ],\r\n        [ BNF.literal(\"contains\"), BNF.literal(\"(\"),\r\n                \"path\", BNF.comma, \"value\",\r\n            BNF.literal(\")\") ],\r\n        [ BNF.literal(\"size\"), BNF.literal(\"(\"), \"path\", BNF.literal(\")\") ],\r\n    ],\r\n    \"path\": [\r\n        [ BNF.ident, BNF.literal(\".\"), \"path\" ],\r\n        [ BNF.ident ],\r\n    ],\r\n    \"between-range\": [\r\n        [ \"value\", AND, \"value\" ],\r\n    ],\r\n    \"value-list\": [\r\n        [\"value\", BNF.comma, \"value-list\" ],\r\n        [\"value\" ],\r\n    ],\r\n    \"value\": [\r\n        [ BNF.numlit ],\r\n        [ BNF.strlitDQ ],\r\n        [ BNF.strlitSQ ],\r\n        [ BNF.ident ],\r\n    ],\r\n    \"limit-clause\": [\r\n        [ LIMIT, \"limit-count\" ],\r\n    ],\r\n    \"limit-count\": [\r\n        [ BNF.numlit ],\r\n    ],\r\n    \"key-type\": [\r\n        [ BNF.literal(\"HASH\") ],\r\n        [ BNF.literal(\"RANGE\") ],\r\n    ],\r\n    \"key-attribute-type\": [\r\n        [ BNF.literal(\"S\") ],\r\n        [ BNF.literal(\"N\") ],\r\n        [ BNF.literal(\"BOOL\") ],\r\n    ],\r\n    \"attribute-type\": [\r\n        [ BNF.literal(\"S\") ],\r\n        [ BNF.literal(\"SS\") ],\r\n        [ BNF.literal(\"N\") ],\r\n        [ BNF.literal(\"NS\") ],\r\n        [ BNF.literal(\"B\") ],\r\n        [ BNF.literal(\"BS\") ],\r\n        [ BNF.literal(\"BOOL\") ],\r\n        [ BNF.literal(\"NULL\") ],\r\n        [ BNF.literal(\"L\") ],\r\n        [ BNF.literal(\"M\") ],\r\n    ],\r\n};\r\n\r\nconst isKeyword = require(\"./dynamodb-keywords.js\").isKeyword;\r\n\r\n//\r\n// Expression parser\r\n//\r\nvar Expression = function() { };\r\n\r\n//\r\n// Lexical analysis\r\n//\r\nExpression.prototype.tokenize = function(expr) {\r\n    var bnfWords = new BNF(\"words\", {\r\n        \"words\": [\r\n            [ \"word\", \"words\", ],\r\n            [ \"word\", ],\r\n        ],\r\n        \"word\": [\r\n            [ \"boolean-literal\" ],\r\n            [ \"comparison-operator\" ],\r\n            [ \"conditional-operator\" ],\r\n            [ \"conditional-function\" ],\r\n            [ \"string-literal\" ],\r\n            [ \"number-literal\" ],\r\n            [ \"identifier\" ],\r\n            [ \"white-space\" ],\r\n            [ \"delimitor\" ],\r\n            [ BNF.lex(\"bool\") ],\r\n            [ BNF.lex(\"comp\") ],\r\n            [ BNF.lex(\"oper\") ],\r\n            [ BNF.lex(\"deli\") ],\r\n            [ BNF.lex(\"func\") ],\r\n            [ BNF.lex(\"str\") ],\r\n            [ BNF.lex(\"num\") ],\r\n            [ BNF.lex(\"ident\") ],\r\n        ],\r\n        \"boolean-literal\": [\r\n            [ BNF.literal(\"true\") ],\r\n            [ BNF.literal(\"false\") ]\r\n        ],\r\n        \"comparison-operator\": [\r\n            [ BNF.literal(\"=\") ],\r\n            [ BNF.literal(\"<\"), BNF.literal(\">\") ],\r\n            [ BNF.literal(\"<\"), BNF.literal(\"=\") ],\r\n            [ BNF.literal(\"<\") ],\r\n            [ BNF.literal(\">\"), BNF.literal(\"=\") ],\r\n            [ BNF.literal(\">\") ],\r\n        ],\r\n        \"conditional-operator\": [\r\n            [ BNF.literal(\"AND\") ],\r\n            [ BNF.literal(\"OR\") ],\r\n            [ BNF.literal(\"NOT\") ],\r\n            [ BNF.literal(\"BETWEEN\") ],\r\n            [ BNF.literal(\"IN\") ],\r\n        ],\r\n        \"white-space\": [\r\n            [ BNF.lex(\"WS\") ]\r\n        ],\r\n        \"delimitor\": [\r\n            [ BNF.literal(\",\") ],\r\n            [ BNF.literal(\"(\") ],\r\n            [ BNF.literal(\")\") ],\r\n            [ BNF.lex(\"PUNCT\") ],\r\n        ],\r\n        \"conditional-function\": [\r\n            [ BNF.literal(\"attribute_exists\") ],\r\n            [ BNF.literal(\"attribute_not_exists\") ],\r\n            [ BNF.literal(\"attribute_type\") ],\r\n            [ BNF.literal(\"begins_with\") ],\r\n            [ BNF.literal(\"contains\") ],\r\n            [ BNF.literal(\"size\") ],\r\n        ],\r\n        \"string-literal\": [\r\n            [ \"string-literal-dq\" ],\r\n            [ \"string-literal-sq\" ],\r\n        ],\r\n        \"string-literal-dq\": [\r\n            [ BNF.literal('\"'), \"string-literal-dq-end\" ],\r\n        ],\r\n        \"string-literal-dq-end\": [\r\n            [ BNF.literalUntil('\"') ],\r\n        ],\r\n        \"string-literal-sq\": [\r\n            [ BNF.literal(\"'\"), \"string-literal-sq-end\" ],\r\n        ],\r\n        \"string-literal-sq-end\": [\r\n            [ BNF.literalUntil(\"'\") ],\r\n        ],\r\n        \"number-literal\": [\r\n            [ BNF.literal(\"-\"), \"number-literal\" ],\r\n            [ BNF.lex(\"NUMLIT\"), BNF.literal(\".\"), BNF.lex(\"NUMLIT\") ],\r\n            [ BNF.lex(\"NUMLIT\") ],\r\n        ],\r\n        \"identifier\": [\r\n            [ BNF.ident, BNF.literal(\".\"), \"identifier\" ],\r\n            [ BNF.literal(\":\"), BNF.ident ],\r\n            [ BNF.ident ],\r\n        ],\r\n    }, {\r\n        \"boolean-literal\": \"bool\",\r\n        \"comparison-operator\": \"comp\",\r\n        \"conditional-operator\": \"oper\",\r\n        \"delimitor\": \"deli\",\r\n        \"conditional-function\": \"func\",\r\n        \"string-literal\": \"str\",\r\n        \"number-literal\": \"num\",\r\n        \"identifier\": \"ident\",\r\n    });\r\n    var bnfTokens = BNF.tokenize(expr, bnfWords);\r\n    if(bnfTokens != null && !Array.isArray(bnfTokens) && !bnfTokens.match) {\r\n        throw new Error(\"Could not tokenize \" + expr);\r\n    }\r\n    bnfTokens.forEach( token => {\r\n        var term = token.getTerm();\r\n        if(token.getType() == \"str\") {\r\n            switch(term.replace(/^(.).*(.)$/, \"$1$2\")) {\r\n                case '\"\"':\r\n                    token.setTerm(unescapeDQ(term.replace(/^\"(.*)\"$/, \"$1\")));\r\n                    break;\r\n                case \"''\":\r\n                    token.setTerm(unescapeSQ(term.replace(/^'(.*)'$/, \"$1\")));\r\n                    break;\r\n                default:\r\n                    throw new Error(\"Broken string-literal \" + term);\r\n            }\r\n        }\r\n    });\r\n    this.tokens = bnfTokens.map( t => {\r\n        return { \"type\": t.getType(), \"lex\": t.getTerm() };\r\n    });\r\n};\r\n\r\nvar ProjectionExpression = function() {};\r\nProjectionExpression.prototype = new Expression();\r\nProjectionExpression.prototype.parse = function(expr) {\r\n    this.tokens = [];\r\n    this.expression = [];\r\n    this.names = {};\r\n\r\n    this.tokenize(expr);\r\n\r\n    this.tokens.forEach(function(token) {\r\n        switch(token.type) {\r\n        case \"ident\":\r\n            this.expression.push(\r\n                token.lex.split('.').map(\r\n                    function(ident) {\r\n                        if(isKeyword(ident)) {\r\n                            var alt = \"#\" + ident;\r\n                            this.names[alt] = ident;\r\n                            return alt;\r\n                        }\r\n                        return ident;\r\n                    }, this).join('.'));\r\n            break;\r\n        case 'deli':\r\n            if(token.lex == ',') {\r\n                this.expression.push(token.lex);\r\n            } else {\r\n                throw new Error(\"Invalid delimitor. \" + expr);\r\n            }\r\n            break;\r\n        default:\r\n            throw new Error(\"R-Value cannot be included. \" + expr);\r\n        }\r\n    }, this);\r\n};\r\nProjectionExpression.prototype.getExpression = function() {\r\n    return this.expression.join(\" \");\r\n};\r\nProjectionExpression.prototype.getAttributeNames = function() {\r\n    if(Object.keys(this.names).length <= 0) {\r\n        return null;\r\n    }\r\n    return this.names;\r\n};\r\n\r\n//\r\n// Condition expression parser\r\n//\r\nvar ConditionExpression = function() { };\r\nConditionExpression.prototype = new Expression();\r\n\r\nConditionExpression.prototype.getExpression = function() {\r\n    return this.expression.join(\" \");\r\n};\r\nConditionExpression.prototype.getAttributeNames = function() {\r\n    if(Object.keys(this.names).length <= 0) {\r\n        return null;\r\n    }\r\n    return this.names;\r\n};\r\nConditionExpression.prototype.getAttributeValues = function() {\r\n    if(Object.keys(this.values).length <= 0) {\r\n        return null;\r\n    }\r\n    return this.values;\r\n};\r\n\r\n//\r\n// Parse\r\n//\r\nConditionExpression.prototype.parse = function(expr, vidx) {\r\n    this.tokens = [];\r\n    this.expression = [];\r\n    this.names = {};\r\n    this.values = {};\r\n\r\n    this.tokenize(expr);\r\n\r\n    vidx = vidx | 0;\r\n    var setValuePlaceholder = function(value) {\r\n        var phname;\r\n        for(;;) {\r\n            phname = \":v\" + vidx;\r\n            vidx++;\r\n            if(!(phname in this.values)) {\r\n                break;\r\n            }\r\n        }\r\n        this.expression.push(phname);\r\n        this.values[phname] = value;\r\n    }.bind(this);\r\n    this.tokens.forEach(function(token) {\r\n        switch(token.type) {\r\n        case \"bool\":\r\n            setValuePlaceholder({ \"BOOL\" : (token.lex == \"true\") });\r\n            break;\r\n        case \"num\":\r\n            setValuePlaceholder({ \"N\" : \"\" + token.lex });\r\n            break;\r\n        case \"str\":\r\n            setValuePlaceholder({ \"S\" : \"\" + token.lex });\r\n            break;\r\n        case \"ident\":\r\n            if(token.lex.charAt(0) === \":\") {\r\n                if(token.lex in this.values && this.values[token.lex] != null) {\r\n                    throw new Error(\"the placeholder \" +\r\n                            token.lex +\r\n                            \" already has value\");\r\n                }\r\n                this.expression.push(token.lex);\r\n                this.values[token.lex] = null;\r\n                break;\r\n            }\r\n            this.expression.push(\r\n                token.lex.split('.').map(\r\n                    function(ident) {\r\n                        if(isKeyword(ident)) {\r\n                            var alt = \"#\" + ident;\r\n                            this.names[alt] = ident;\r\n                            return alt;\r\n                        }\r\n                        return ident;\r\n                    }, this).join('.'));\r\n            break;\r\n        default:\r\n            this.expression.push(token.lex);\r\n            break;\r\n        }\r\n    }, this);\r\n};\r\n//\r\n// ItemList expression parser\r\n//\r\n// Parser class to convert a string of a comma separated assignment expression to\r\n// DynamoDB map object representing its Item.\r\n//\r\n// EXAMPLE:\r\n//\r\n//  input string:\r\n//      id=\"123\",timestamp=145678900,test.name=\"foo\",test.pass=true,value.version=\"0.6.6\"\r\n//\r\n//  output object:\r\n//      {\r\n//          \"id\":       {\"S\": \"123\"},\r\n//          \"timestamp\":{\"N\": \"145678900\"},\r\n//          \"test\": {\r\n//              \"M\": {\r\n//                  \"name\": {\"S\": \"foo\"},\r\n//                  \"pass\": {\"BOOL\": true}\r\n//              }\r\n//          },\r\n//          \"value\" : {\"M\" : {\"version\": {\"S\": \"0.6.6\"}}}\r\n//      }\r\n//\r\nvar ItemListExpression = function() {};\r\nItemListExpression.prototype = new Expression();\r\nItemListExpression.prototype.parse = function(itemList) {\r\n    var map = {};\r\n    this.tokens = [];\r\n    this.tokenize(itemList);\r\n    \r\n    var attributeItems = [];\r\n    var attributeItem = [];\r\n    this.tokens.forEach(function(token) {\r\n        if(token.type == \"deli\" && token.lex == \",\") {\r\n            attributeItems.push(attributeItem);\r\n            attributeItem = [];\r\n        } else {\r\n            attributeItem.push(token);\r\n        }\r\n    });\r\n    attributeItems.push(attributeItem);\r\n    attributeItems.forEach(function(attributeItem) {\r\n        var expr = attributeItem.map(function(token) { return token.lex; }).join(\" \");\r\n        if(attributeItem.length != 3) {\r\n            throw new Error(\"Invalid format. \" + expr);\r\n        } else if(attributeItem[0].type != \"ident\") {\r\n            throw new Error(\"Lvalue must be a item name or map path. \" + expr);\r\n        } else if(attributeItem[1].type != \"comp\" || attributeItem[1].lex != \"=\") {\r\n            throw new Error(\"The expression must be an assignment. \" + expr);\r\n        } else if(attributeItem[2].type != \"bool\" &&\r\n                attributeItem[2].type != \"str\" &&\r\n                attributeItem[2].type != \"num\" &&\r\n                attributeItem[2].lex.charAt(0) !== \":\")\r\n        {\r\n            throw new Error(\"Rvalue must be a value. \" + expr);\r\n        }\r\n        var LTok = attributeItem[0];\r\n        var RTok = attributeItem[2];\r\n        var paths = LTok.lex.split('.');\r\n        var obj = map;\r\n        for(var i = 0; i < paths.length; i++) {\r\n            var path = paths[i];\r\n            if(!(path in obj)) {\r\n                if(i < paths.length - 1) {\r\n                    obj[path] = { \"M\" : {} };\r\n                } else {\r\n                    obj[path] = { /* T.B.D */ };\r\n                }\r\n            }\r\n            if(\"M\" in obj[path]) {\r\n                obj = obj[path].M;\r\n            } else {\r\n                obj = obj[path];\r\n            }\r\n        }\r\n        switch(RTok.type) {\r\n        case \"bool\":\r\n            obj[\"BOOL\"] = (RTok.lex == \"true\");\r\n            break;\r\n        case \"num\":\r\n            obj[\"N\"] = \"\" + RTok.lex;\r\n            break;\r\n        case \"str\":\r\n            obj[\"S\"] = \"\" + RTok.lex;\r\n            break;\r\n        default:\r\n            break;\r\n        }\r\n    });\r\n    return map;\r\n};\r\n\r\nDynamoDbSqlishParser.parseProjectionExpression = function(\r\n        projectionExpression, expressionAttributeNames)\r\n{\r\n    var parser = new ProjectionExpression();\r\n    parser.parse(projectionExpression);\r\n    var names = parser.getAttributeNames();\r\n    if(names) {\r\n        Object.keys(names).forEach(function(ph) {\r\n            expressionAttributeNames[ph] = names[ph];\r\n        });\r\n    }\r\n    return parser.getExpression();\r\n};\r\nDynamoDbSqlishParser.parseConditionExpression = function(\r\n        conditionExpression,\r\n        expressionAttributeNames,\r\n        expressionAttributeValues)\r\n{\r\n    var parser = new ConditionExpression();\r\n    parser.parse(conditionExpression,\r\n            Object.keys(expressionAttributeValues).length);\r\n\r\n    var names = parser.getAttributeNames();\r\n    if(names) {\r\n        Object.keys(names).forEach(function(ph) {\r\n            expressionAttributeNames[ph] = names[ph];\r\n        });\r\n    }\r\n\r\n    var values = parser.getAttributeValues();\r\n    if(values) {\r\n        Object.keys(values).forEach(function(ph) {\r\n            expressionAttributeValues[ph] = values[ph];\r\n        });\r\n    }\r\n\r\n    return parser.getExpression();\r\n};\r\n\r\n\r\n//\r\n// Parse ItemList expression and returns DynamoDB table item for put-item operation.\r\n//\r\n// EXAMPLE:\r\n//\r\n//  input string:\r\n//      id=\"123\",timestamp=145678900,test.name=\"foo\",test.pass=true,value.version=\"0.6.6\"\r\n//\r\n//  output object:\r\n//      {\r\n//          \"id\":       {\"S\": \"123\"},\r\n//          \"timestamp\":{\"N\": \"145678900\"},\r\n//          \"test\": {\r\n//              \"M\": {\r\n//                  \"name\": {\"S\": \"foo\"},\r\n//                  \"pass\": {\"BOOL\": true}\r\n//              }\r\n//          },\r\n//          \"value\" : {\"M\" : {\"version\": {\"S\": \"0.6.6\"}}}\r\n//      }\r\n//\r\nDynamoDbSqlishParser.parseItemListToMap = function(itemList) {\r\n    var parser = new ItemListExpression();\r\n    return parser.parse(itemList);\r\n};\r\n\r\nDynamoDbSqlishParser.WordBuilder = new BNF(\"words\", {\r\n    \"words\": [\r\n        [ \"word\", \"words\", ],\r\n        [ \"word\", ],\r\n    ],\r\n    \"word\": [\r\n        [ \"num-literal\" ],\r\n        [ \"comparison-operator\" ],\r\n        [ \"attribute-value-placeholder\" ],\r\n        [ \"attribute-path-name\" ],\r\n        [ \"comment-mark\" ],\r\n        [ \"escaped-char\" ],\r\n        [ \"string-literal\" ],\r\n        [ \"block-comment\" ],\r\n        [ \"line-comment\" ],\r\n        [ BNF.ident ],\r\n        [ BNF.lex(\"PUNCT\") ],\r\n        [ BNF.strlitDQ ],\r\n        [ BNF.strlitSQ ],\r\n        [ BNF.lex(\"WS\") ],\r\n        [ BNF.lex(\"WS-LINCMT\") ],\r\n        [ BNF.lex(\"WS-BLKCMT\") ],\r\n    ],\r\n    \"num-literal\": [\r\n        [ \"fractional-literal\" ],\r\n        [ \"int-literal\" ],\r\n    ],\r\n    \"int-literal\": [\r\n        [ \"dec-num-literal\" ],\r\n    ],\r\n    \"dec-num-literal\": [\r\n        [ \"[sign]\", BNF.lex(\"NUMLIT\"), ],\r\n    ],\r\n    \"sign\": [\r\n        [ BNF.literal(\"+\") ],\r\n        [ BNF.literal(\"-\") ],\r\n    ],\r\n    \"fractional-literal\": [\r\n        [ \"[sign]\", BNF.lex(\"NUMLIT\"), \"fractional-part\" ],\r\n    ],\r\n    \"fractional-part\": [\r\n        [ BNF.literal(\".\"), BNF.lex(\"NUMLIT\"), \"[exp-part]\", ],\r\n    ],\r\n    \"exp-part\": [\r\n        [ BNF.literal(\"E\"), \"[sign]\", BNF.lex(\"NUMLIT\"), ],\r\n        [ BNF.literal(\"e\"), \"[sign]\", BNF.lex(\"NUMLIT\"), ],\r\n    ],\r\n    \"comparison-operator\": [\r\n        [ BNF.literal(\"<\"), BNF.literal(\"=\") ],\r\n        [ BNF.literal(\"<\"), BNF.literal(\">\") ],\r\n        [ BNF.literal(\">\"), BNF.literal(\"=\") ],\r\n        [ BNF.literal(\">\"), ],\r\n        [ BNF.literal(\"=\"), ],\r\n        [ BNF.literal(\"<\"), ],\r\n    ],\r\n    \"attribute-value-placeholder\": [\r\n        [ BNF.literal(\":\"), BNF.ident ],\r\n    ],\r\n    \"attribute-path-name\": [\r\n        [ BNF.ident, BNF.literal(\".\"), \"attribute-path-name\" ],\r\n        [ BNF.ident, BNF.literal(\".\"), BNF.ident ],\r\n    ],\r\n    \"block-comment\":[\r\n        [ BNF.literal(\"/*\"), BNF.literalUntil(\"*/\") ],\r\n    ],\r\n    \"line-comment\":[\r\n        [ BNF.literal(\"//\"), BNF.literalUntil(\"\\n\") ],\r\n        [ BNF.literal(\"--\"), BNF.literalUntil(\"\\n\") ],\r\n    ],\r\n    \"comment-mark\": [\r\n        [ BNF.literal(\"/\"), BNF.literal(\"*\") ],\r\n        [ BNF.literal(\"*\"), BNF.literal(\"/\") ],\r\n        [ BNF.literal(\"/\"), BNF.literal(\"/\") ],\r\n        [ BNF.literal(\"-\"), BNF.literal(\"-\") ],\r\n    ],\r\n    \"escaped-char\": [\r\n        [ BNF.literal(\"\\\\\"), BNF.literal(\"\\\\\"), ],\r\n        [ BNF.literal(\"\\\\\"), BNF.literal(\"\\\"\"), ],\r\n        [ BNF.literal(\"\\\\\"), BNF.literal(\"'\"), ],\r\n    ],\r\n    \"string-literal\": [\r\n        [ \"string-literal-dq\" ],\r\n        [ \"string-literal-sq\" ],\r\n    ],\r\n    \"string-literal-dq\": [\r\n        [ BNF.literal('\"'), \"string-literal-dq-end\" ],\r\n    ],\r\n    \"string-literal-dq-end\": [\r\n        [ BNF.literalUntil('\"') ],\r\n        [ BNF.literal('\"') ],\r\n    ],\r\n    \"string-literal-sq\": [\r\n        [ BNF.literal(\"'\"), \"string-literal-sq-end\" ],\r\n    ],\r\n    \"string-literal-sq-end\": [\r\n        [ BNF.literalUntil(\"'\") ],\r\n        [ BNF.literal(\"'\") ],\r\n    ],\r\n}, {\r\n    \"num-literal\": \"NUMLIT\",\r\n    \"comparison-operator\": \"PUNCT\",\r\n    \"attribute-value-placeholder\": \"IDENT\",\r\n    \"attribute-path-name\": \"IDENT\",\r\n    \"block-comment\": \"WS-BLKCMT\",\r\n    \"line-comment\": \"WS-LINCMT\",\r\n    \"comment-mark\": \"WS\",\r\n    \"escaped-char\": \"PUNCT\",\r\n    \"string-literal-dq\": \"STRLIT-DQ\",\r\n    \"string-literal-sq\": \"STRLIT-SQ\",\r\n});\r\nDynamoDbSqlishParser.bnfScan = new BNF(\"sqlish-scan\", DynamoDbSqlishParser.BNF);\r\nDynamoDbSqlishParser.bnfQuery = new BNF(\"sqlish-query\", DynamoDbSqlishParser.BNF);\r\nDynamoDbSqlishParser.bnfPutItem = new BNF(\"sqlish-put-item\", DynamoDbSqlishParser.BNF);\r\nDynamoDbSqlishParser.bnfSetItem = new BNF(\"sqlish-set-item\", DynamoDbSqlishParser.BNF);\r\nDynamoDbSqlishParser.bnfDeleteItem = new BNF(\"sqlish-delete-item\", DynamoDbSqlishParser.BNF);\r\nDynamoDbSqlishParser.bnfCreateTable = new BNF(\"sqlish-create-table\", DynamoDbSqlishParser.BNF);\r\nDynamoDbSqlishParser.bnfDeleteTable = new BNF(\"sqlish-delete-table\", DynamoDbSqlishParser.BNF);\r\nDynamoDbSqlishParser.bnfUpdateTable = new BNF(\"sqlish-update-table\", DynamoDbSqlishParser.BNF);\r\n\r\nDynamoDbSqlishParser.parse = function(source, bnf) {\r\n    var tokens = BNF.tokenize(source, DynamoDbSqlishParser.WordBuilder);\r\n    //var tokens = DynamoDbSqlishParser.WordBuilder.tokenize(source);\r\n    if(tokens != null && !Array.isArray(tokens) && !tokens.match) {\r\n        return tokens; // tokens is BNF.Result object.\r\n    }\r\n    tokens.forEach( token => {\r\n        var term = token.getTerm();\r\n        switch(token.getType()) {\r\n        case \"STRLIT-DQ\":\r\n            token.setTerm(\"\\\"\" + unescapeDQ(term.replace(/^\"(.*)\"$/, \"$1\")) + \"\\\"\");\r\n            break;\r\n        case \"STRLIT-SQ\":\r\n            token.setTerm(\"'\" + unescapeSQ(term.replace(/^'(.*)'$/, \"$1\")) + \"'\");\r\n            break;\r\n        default:\r\n            break;\r\n        }\r\n    });\r\n    var result = bnf.parseTokens(tokens);\r\n    return result;\r\n};\r\n\r\nfunction unescapeDQ(s) {\r\n    s = strUnescape(s);\r\n    var ss = \"\";\r\n    var len = s.length;\r\n    for(var i = 0; i < len; i++) {\r\n        var c = s.charAt(i);\r\n        if(c == \"\\\"\") {\r\n            ss += \"\\\\\\\"\";\r\n        } else {\r\n            ss += c;\r\n        }\r\n    }\r\n    return ss;\r\n}\r\n\r\nfunction unescapeSQ(s) {\r\n    s = strUnescape(s);\r\n    var ss = \"\";\r\n    var len = s.length;\r\n    for(var i = 0; i < len; i++) {\r\n        var c = s.charAt(i);\r\n        if(c == \"'\") {\r\n            ss += \"\\\\'\";\r\n        } else {\r\n            ss += c;\r\n        }\r\n    }\r\n    return ss;\r\n}\r\n\r\nfunction strUnescape(s) {\r\n    var ss = \"\";\r\n    var len = s.length;\r\n    for(var i = 0; i < len; i++) {\r\n        var c = s.charAt(i);\r\n        var cc = c.charCodeAt(0);\r\n        switch(c) {\r\n            case \"\\t\": ss += \"\\\\t\"; break;\r\n            case \"\\r\": ss += \"\\\\r\"; break;\r\n            case \"\\n\": ss += \"\\\\n\"; break;\r\n            default:\r\n                if(0x20 <= cc && cc <= 0x7f || cc > 0xff) {\r\n                    ss += c;\r\n                } else if(cc <= 0xff) {\r\n                    ss += \"\\\\x\" + parseInt(cc, 16);\r\n                }\r\n                break;\r\n        }\r\n    }\r\n    return ss;\r\n}\r\n\r\nDynamoDbSqlishParser.parseCreateTable = function(source) {\r\n    return DynamoDbSqlishParser.parse(source,\r\n            DynamoDbSqlishParser.bnfCreateTable);\r\n};\r\nDynamoDbSqlishParser.parseDeleteTable = function(source) {\r\n    return DynamoDbSqlishParser.parse(source,\r\n            DynamoDbSqlishParser.bnfDeleteTable);\r\n};\r\nDynamoDbSqlishParser.parseUpdateTable = function(source) {\r\n    return DynamoDbSqlishParser.parse(source,\r\n            DynamoDbSqlishParser.bnfUpdateTable);\r\n};\r\nDynamoDbSqlishParser.parseScan = function(source) {\r\n    return DynamoDbSqlishParser.parse(source,\r\n            DynamoDbSqlishParser.bnfScan);\r\n};\r\nDynamoDbSqlishParser.parseQuery = function(source) {\r\n    var result = DynamoDbSqlishParser.parse(source,\r\n            DynamoDbSqlishParser.bnfQuery);\r\n    return result;\r\n};\r\nDynamoDbSqlishParser.parsePutItem = function(source) {\r\n    return DynamoDbSqlishParser.parse(source,\r\n            DynamoDbSqlishParser.bnfPutItem);\r\n};\r\nDynamoDbSqlishParser.parseSetItem = function(source) {\r\n    return DynamoDbSqlishParser.parse(source,\r\n            DynamoDbSqlishParser.bnfSetItem);\r\n};\r\nDynamoDbSqlishParser.parseDeleteItem = function(source) {\r\n    return DynamoDbSqlishParser.parse(source,\r\n            DynamoDbSqlishParser.bnfDeleteItem);\r\n};\r\n\r\nmodule.exports = DynamoDbSqlishParser;\r\n","\"use strict\";\r\nvar clone = require(\"clone\");\r\nvar DynamoDbDataModels = require(\"./dynamodb-data-models.js\");\r\nvar parser = require('./dynamodb-sqlish-parser.js');\r\n\r\n/**\r\n * Statement class\r\n * @constructor\r\n */\r\nfunction Statement() {\r\n    this._parser = parser;\r\n    this.tableName = null;\r\n    this.expressionAttributeNames = {};\r\n    this.expressionAttributeValues = {};\r\n}\r\n\r\n/**\r\n * Run this statement.\r\n * @returns {undefined}\r\n */\r\nStatement.prototype.run = function() {\r\n    throw new Error(\"Fatal: run has no implementation\");\r\n};\r\n\r\n/**\r\n * Set table name.\r\n * @param {string} tableName A table name\r\n * @returns {undefined}\r\n */\r\nStatement.prototype.setTableName = function(tableName) {\r\n    this.tableName = tableName;\r\n};\r\n\r\n/**\r\n * Parse ConditionExpression and translate the expr to use placeholders.\r\n * The attribute names or values are added to expressionAttributeNames/Values. \r\n * @param {string} conditionExpr Expression\r\n * @returns {string} A translated expression. It might include placeholders.\r\n */\r\nStatement.prototype.parseConditionExpression = function(conditionExpr) {\r\n    return this._parser.parseConditionExpression(\r\n        conditionExpr,\r\n        this.expressionAttributeNames,\r\n        this.expressionAttributeValues);\r\n};\r\n\r\n/**\r\n * Get a parameter as a result of this statement instance.\r\n * It is available to execute the DynamoDB API.\r\n * @param {object} args K-V which is an attribute name to the value.\r\n * @returns {object} A parameter for the DynamoDB API.\r\n */\r\nStatement.prototype.getParameter = function(args) {\r\n    var opt = {};\r\n    if(this.tableName) {\r\n        opt.TableName = this.tableName;\r\n    }\r\n\r\n    // Expression attribute names\r\n    if(Object.keys(this.expressionAttributeNames).length > 0) {\r\n        opt.ExpressionAttributeNames = this.expressionAttributeNames;\r\n    }\r\n\r\n    // Expression attribute values\r\n    if(Object.keys(this.expressionAttributeValues).length > 0) {\r\n        opt.ExpressionAttributeValues = this.expressionAttributeValues;\r\n    }\r\n    if(args) {\r\n        opt = Statement.setParam(opt, args);\r\n    }\r\n    return opt;\r\n};\r\n\r\n/**\r\n * Set arguments to param.\r\n * @param {object} param API parameter\r\n * @param {object} args Key-Value. Attribute name to value.\r\n * @returns {object} result param. It is clone of the input param.\r\n */\r\nStatement.setParam = function(param, args) {\r\n    param = clone(param);\r\n    if(\"ExpressionAttributeValues\" in param) {\r\n        Object.keys(param.ExpressionAttributeValues).forEach( name => {\r\n            if(param.ExpressionAttributeValues[name] === null && name in args) {\r\n                param.ExpressionAttributeValues[name] = DynamoDbDataModels.obj2map(args[name]);\r\n            }\r\n        });\r\n    }\r\n    return param;\r\n};\r\n\r\n/**\r\n * Assert that all attribute values are specified.\r\n * @param {object} param K-V which has an attribute name to the value\r\n * @returns {undefined}\r\n */\r\nStatement.assertAllParamSpecified = function(param) {\r\n    if(\"ExpressionAttributeValues\" in param) {\r\n        Object.keys(param.ExpressionAttributeValues).forEach( name => {\r\n            if(param.ExpressionAttributeValues[name] === null) {\r\n                throw new Error(\"The parameter \" + name + \" is not specified\");\r\n            }\r\n        });\r\n    }\r\n};\r\nmodule.exports = Statement;\r\n","\"use strict\";\r\nvar Statement = require('./dynamodb-statement.js');\r\n\r\n/**\r\n * An abstract base class for ScanStatement and QueryStatement.\r\n * @constructor\r\n */\r\nfunction DynamoDbReadItemStatement() {\r\n    Statement.apply(this, Array.from(arguments));\r\n}\r\n\r\nDynamoDbReadItemStatement.prototype = new Statement();\r\n\r\n/**\r\n * Set LIMIT clause.\r\n * @param {number} limit A limit count to be read\r\n * @returns {undefined}\r\n */\r\nDynamoDbReadItemStatement.prototype.setLimit = function(limit) {\r\n    this.limit = limit;\r\n};\r\n\r\n/**\r\n * Set an exclusive start key that is used for `lastEvaluatedKey` parameter.\r\n * @param {string} lastEvaluatedKey A lastEvaluatedKey which was returned\r\n *  previous scan or query\r\n * @returns {undefined}\r\n */\r\nDynamoDbReadItemStatement.prototype.setExclusiveStartKey = function(lastEvaluatedKey) {\r\n    this.exclusiveStartKey = lastEvaluatedKey;\r\n};\r\n\r\n/**\r\n * Set ProjectionExpression.\r\n * @param {string} projexpr Comma separated attribute names to be selected\r\n * @returns {undefined}\r\n */\r\nDynamoDbReadItemStatement.prototype.setProjectionExpression = function(projexpr) {\r\n    this.projectionExpression =\r\n        this._parser.parseProjectionExpression(\r\n                projexpr, this.expressionAttributeNames);\r\n};\r\n\r\nmodule.exports = DynamoDbReadItemStatement;\r\n","\"use strict\";\r\nconst DynamoDbReadItemStatement = require('./dynamodb-read-item-statement.js');\r\n\r\n/**\r\n * SQL-ish Query statement class for AWS DynamoDB.\r\n *\r\n * SQL-ish Syntax:\r\n *\r\n * ```\r\n * [SELECT <projection-expression>]\r\n * FROM <table-name>\r\n * WHERE <key-condition-expression>\r\n * [FILTER <filter-expression>]\r\n * [LIMIT <limit>]\r\n * ```\r\n *\r\n * * `[]` is representing that can be ommited.\r\n * * `<projection-expression>` - The comma separated attribute names to select.\r\n * * `<table-name>` - DynamoDB table name.\r\n * * `<key-condition-expression>` - Primary key conditional expression.\r\n * * `<filter-expression>` - Filtering conditional expression.\r\n * * `<limit>` - The number of items to scan.\r\n *\r\n * @param {string|object} opt\r\n * SQL-ish Query statement as string or parameter object for Query API.\r\n *\r\n * @constructor\r\n */\r\nfunction DynamoDbQueryStatement(opt) {\r\n    DynamoDbReadItemStatement.apply(this, Array.from(arguments));\r\n\r\n    this.limit = null;\r\n    this.exclusiveStartKey = null;\r\n    this.projectionExpression = null;\r\n    this.keyConditionExpression = null;\r\n    this.filterExpression = null;\r\n\r\n    if(!opt) {\r\n        return;\r\n    }\r\n    if(typeof(opt) === \"string\") {\r\n        opt = this.parse(opt);\r\n    }\r\n    if(!(\"TableName\" in opt)) {\r\n        throw new Error(\"TableName required\");\r\n    }\r\n    if(!(\"KeyConditionExpression\" in opt)) {\r\n        throw new Error(\"KeyConditionExpression required\");\r\n    }\r\n    this.setTableName(opt.TableName);\r\n    this.setKeyConditionExpression(opt.KeyConditionExpression);\r\n    if(\"FilterExpression\" in opt) {\r\n        this.setFilterExpression(opt.FilterExpression);\r\n    }\r\n    if(\"ProjectionExpression\" in opt) {\r\n        this.setProjectionExpression(opt.ProjectionExpression);\r\n    }\r\n    if(\"Limit\" in opt) {\r\n        this.setLimit(opt.Limit);\r\n    }\r\n    if(\"LastEvaluatedKey\" in opt) {\r\n        this.setExclusiveStartKey(opt.LastEvaluatedKey);\r\n    }\r\n}\r\n\r\nDynamoDbQueryStatement.prototype = new DynamoDbReadItemStatement();\r\n\r\n/**\r\n * Parse the SQL-ish statement.\r\n * @param {string} sqlish SQL-ish statement\r\n * @returns {object} A parameter for DynamoDB query API.\r\n */\r\nDynamoDbQueryStatement.prototype.parse = function(sqlish) {\r\n    const opt = {};\r\n    const st = this._parser.parseQuery(sqlish);\r\n\r\n    const fromClause = st.getTerm(\"from-clause\");\r\n    if(!fromClause.match) {\r\n        throw new Error(\"the from-clause not found\");\r\n    } else {\r\n        opt.TableName = fromClause.getWordsList(\"table-name\")[0].join(\"\");\r\n    }\r\n\r\n    const whereClause = st.getTerm(\"where-key-clause\");\r\n    if(!whereClause.match) {\r\n        throw new Error(\"the where clause not found\");\r\n    } else {\r\n        opt.KeyConditionExpression =\r\n            whereClause.getWordsList(\"condition-expression\")[0].join(\" \");\r\n    }\r\n\r\n    const selectClause = st.getTerm(\"select-clause\");\r\n    if(selectClause.match) {\r\n        opt.ProjectionExpression =\r\n            selectClause.getWordsList(\"key-list\")[0].join(\"\");\r\n    }\r\n    const filterClause = st.getTerm(\"filter-clause\");\r\n    if(filterClause.match) {\r\n        opt.FilterExpression =\r\n            filterClause.getWordsList(\"condition-expression\")[0].join(\" \");\r\n    }\r\n    const limitClause = st.getTerm(\"limit-clause\");\r\n    if(limitClause.match) {\r\n        opt.Limit = limitClause.getWordsList(\"limit-count\")[0].join(\" \");\r\n    }\r\n    return opt;\r\n};\r\n\r\n/**\r\n * Get parameter to invoke the query API.\r\n * @param {object} args key-values for the expression to run the query.\r\n * @returns {object} A parameter for DynamoDB query API.\r\n */\r\nDynamoDbQueryStatement.prototype.getParameter = function(args) {\r\n    const opt = DynamoDbReadItemStatement.prototype.getParameter.call(this, args);\r\n    if(this.keyConditionExpression) {\r\n        opt.KeyConditionExpression = this.keyConditionExpression;\r\n    }\r\n    if(this.limit) {\r\n        opt.Limit = this.limit;\r\n    }\r\n    if(this.exclusiveStartKey) {\r\n        opt.ExclusiveStartKey = this.exclusiveStartKey;\r\n    }\r\n    if(this.projectionExpression) {\r\n        opt.ProjectionExpression = this.projectionExpression;\r\n    }\r\n    if(this.filterExpression) {\r\n        opt.FilterExpression = this.filterExpression;\r\n    }\r\n    return opt;\r\n};\r\n\r\n/**\r\n * Set KeyConditionExpression for query.\r\n * @param {string} keyConditionExpr expression\r\n * @returns {undefined}\r\n */\r\nDynamoDbQueryStatement.prototype.setKeyConditionExpression = function(keyConditionExpr) {\r\n    this.keyConditionExpression = this.parseConditionExpression( keyConditionExpr );\r\n};\r\n\r\n/**\r\n * Set FilterExpression for query.\r\n * @param {string} filterExpr expression\r\n * @returns {undefined}\r\n */\r\nDynamoDbQueryStatement.prototype.setFilterExpression = function(filterExpr) {\r\n    this.filterExpression = this.parseConditionExpression( filterExpr );\r\n};\r\n\r\nmodule.exports = DynamoDbQueryStatement;\r\n","/* global $ */\r\n\"use strict\";\r\n$.fn.uitext = function() {\r\n    this.each(function() {\r\n        $(this).addClass(\"ui-spinner-input\")\r\n            .css({'margin-right':'.4em'})\r\n            .appendTo(\r\n                $('<span/>')\r\n                    .addClass(\"ui-spinner\")\r\n                    .addClass(\"ui-widget\")\r\n                    .addClass(\"ui-widget-content\")\r\n                    .addClass(\"ui-corner-all\")\r\n                    .insertBefore(this));\r\n    });\r\n};","/* global window,document,$ */\r\n\"use strict\";\r\nconst uuid = require(\"uuid/v4\");\r\nconst QueryStatement = require(\"../lib/dynamodb-query-statement.js\");\r\nrequire(\"./jquery-uitext.js\");\r\n//const ScanStatement = require(\"../lib/dynamodb-query-statement.js\");\r\n//const PutItemStatement = require(\"../lib/dynamodb-put-item-statement.js\");\r\n//const DeleteItemStatement = require(\"../lib/dynamodb-delete-item-statement.js\");\r\nconst appId = uuid();\r\nconst id = name => `${name}-${appId}`;\r\n\r\nfunction DynamoDbApiParameter(appFrame) {\r\n    appFrame.addClass(\"ui-widget\");\r\n    this.txtProjectionExpression = $(`<input type=\"text\" class=\"text\" id=\"${id(\"txtProjectionExpression\")}\"/>`).val(\"name\");\r\n    this.txtTableName = $(`<input type=\"text\" class=\"text\" id=\"${id(\"txtTableName\")}\"/>`).val(`stars`);\r\n    this.txtKeyConditionExpression = $(`<input type=\"text\" class=\"text\" id=\"${id(\"txtKeyConditionExpression\")}\"/>`).val(`mainStar=\"SUN\"`);\r\n    this.txtFilterExpression = $(`<input type=\"text\" class=\"text\" id=\"${id(\"txtFilterExpression\")}\"/>`).val(`radius < 100`);\r\n    this.txtLimit = $(`<input type=\"text\" class=\"number\" id=\"${id(\"txtLimit\")}\"/>`).css(\"text-align\", \"right\").val(5);\r\n    this.preResultParameter = $(`<pre id=\"${id(\"apiParameter\")}\"/>`)\r\n        .css(\"webkitUserSelect \", \"auto\").css(\"userSelect \", \"auto\")\r\n        .css(\"width\", \"100%\");\r\n    this.btnCopyParam = $(`<button type=\"button\">Copy</button>`).button();\r\n\r\n    const inputLabel = (input, caption) =>\r\n        $(`<label for=\"${input.attr(\"id\")}\">${caption}</label>`)\r\n        .css(\"display\", \"inline-block\").css(\"width\", \"200px\");\r\n    //const remarkId = id =>\r\n    //    `remark-of-${id}`;\r\n    //const spanRemark = (input, remark) =>\r\n    //    $(`<span id=\"${remarkId(input.attr(\"id\"))}\">${remark}</label>`)\r\n    //    .css(\"display\", \"inline-block\")\r\n    //    .css(\"margin-left\", \"1em\");\r\n    const input = (mandatory, input, caption, remark) => {\r\n        const container = $(`<div/>`)\r\n            .css(\"margin-bottom\", \"1em\")\r\n            .css(\"vertical-align\", \"base-line\")\r\n            .attr(\"title\", remark);\r\n        if(mandatory) {\r\n            container.append(\r\n                $(`<span>*</span>`)\r\n                    .css(\"color\", \"red\")\r\n                    .css(\"margin\", \"3px 3px 3px 4px\")\r\n                    .css(\"text-align\", \"center\")\r\n                    .css(\"display\", \"inline-block\")\r\n                    .css(\"width\", \"30px\"));\r\n        } else {\r\n            const enable = (input, state) => {\r\n                if(state) {\r\n                    input.prop(\"disabled\", false);\r\n                    //input.val(input.attr(\"latest\"));\r\n                    input.focus();\r\n                } else {\r\n                    //input.attr(\"latest\", input.val());\r\n                    //input.val(\"\");\r\n                    input.prop(\"disabled\", true);\r\n                }\r\n            };\r\n            const applyCheckbox = (cb, input) => {\r\n                if(cb.prop(\"checked\")) {\r\n                    enable(input, true);\r\n                } else {\r\n                    enable(input, false);\r\n                }\r\n            }\r\n            container.append(\r\n                $(`<input type=\"checkbox\" class=\"optional\" id=\"enable-${input.attr(\"id\")}\"/>`)\r\n                    .css(\"width\", \"30px\")\r\n                    .bind(\"click\", ()=>{\r\n                        applyCheckbox($(`#enable-${input.attr(\"id\")}`), input);\r\n                    })\r\n            );\r\n            applyCheckbox($(`#enable-${input.attr(\"id\")}`), input);\r\n        }\r\n        container\r\n            .append(inputLabel(input, caption))\r\n            .append(input);\r\n        if(input.hasClass(\"text\")) {\r\n            input.uitext();\r\n        }\r\n        return container;\r\n    };\r\n\r\n    appFrame\r\n        .append($(`<h2>DynamoDB Query API Parameter Generator</h2>`))\r\n        .append($(`<h3>Query Specification</h3>`))\r\n        .append(input(false, this.txtProjectionExpression, \"ProjectionExpression\", \"List of attribute name\"))\r\n        .append(input(true, this.txtTableName, \"TableName\", \"Table name (mandatory)\"))\r\n        .append(input(true, this.txtKeyConditionExpression, \"KeyConditionExpression\", \"Key condition (mandatory)\"))\r\n        .append(input(false, this.txtFilterExpression, \"FilterExpression\", \"Filter (applied after scanning)\"))\r\n        .append(input(false, this.txtLimit, \"Limit\", \"Number of result rows. zero means no limit.\"))\r\n        .append($(`<h3>Query API Parameter</h3>`))\r\n        .append(this.preResultParameter).append($(`<br/>`))\r\n        .append(this.btnCopyParam);\r\n    appFrame.find(\"input[type=text]\").bind(\"input\", () => this.convert());\r\n    appFrame.find(\"input[type=checkbox]\").bind(\"input\", () => this.convert());\r\n    this.btnCopyParam.bind(\"click\", ()=>{\r\n        document.getSelection().selectAllChildren(this.preResultParameter.get(0));\r\n        const copy = document.execCommand(\"copy\");\r\n        console.log(`${copy}`);\r\n    })\r\n    //$(\"input.text\").uitext();\r\n    this.txtLimit.spinner({\r\n        min: 0,\r\n        spin: (event, ui) => {\r\n            this.txtLimit.spinner(\"value\", ui.value);\r\n            this.convert();\r\n        },\r\n        change: () => this.convert(),\r\n    });\r\n    this.preResultParameter.uitext();\r\n    this.convert();\r\n}\r\nDynamoDbApiParameter.prototype.convert = function() {\r\n    const projectionExpression = this.txtProjectionExpression.val().trim();\r\n    const tableName = this.txtTableName.val().trim();\r\n    const keyConditionExpression = this.txtKeyConditionExpression.val().trim();\r\n    const FilterExpression = this.txtFilterExpression.val().trim();\r\n    const Limit = this.txtLimit.spinner(\"value\");\r\n    try {\r\n        if(!tableName) {\r\n            throw new Error(`TableName required`);\r\n        }\r\n        if(!keyConditionExpression) {\r\n            throw new Error(`KeyConditionExpression required`);\r\n        }\r\n        const sqlish = [];\r\n        if(projectionExpression) {\r\n            sqlish.push(`SELECT ${projectionExpression}`);\r\n        }\r\n        sqlish.push(`FROM ${tableName}`);\r\n        sqlish.push(`WHERE ${keyConditionExpression}`);\r\n        if(FilterExpression) {\r\n            sqlish.push(`Filter ${FilterExpression}`);\r\n        }\r\n        if(Limit) {\r\n            console.log(`Limit:${Limit}:${typeof(Limit)}`);\r\n            sqlish.push(`LIMIT ${Limit}`);\r\n        }\r\n        const apiParameter = this.convertQueryParam(sqlish.join(\" \"));\r\n        console.log(JSON.stringify(apiParameter, null, 2));\r\n        $(`#${id(\"apiParameter\")}`).empty().html(JSON.stringify(apiParameter, null, 2));\r\n        $(`#${id(\"txtParameter\")}`).empty().html(JSON.stringify(apiParameter, null, 2));\r\n        $(`#${id(\"message\")}`).html(\"OK\");\r\n    } catch(err) {\r\n        $(`#${id(\"message\")}`).html(err.message);\r\n    }\r\n};\r\n\r\nDynamoDbApiParameter.prototype.convertQueryParam = function(source) {\r\n    const statement = new QueryStatement(source);\r\n    return statement.getParameter();\r\n};\r\n\r\nDynamoDbApiParameter.initialize = (appFrame)=> {\r\n    console.log(`DynamoDbParamConv.initialize`);\r\n    return new DynamoDbApiParameter(appFrame);\r\n};\r\n\r\nwindow.DynamoDbApiParameter = DynamoDbApiParameter;"]}